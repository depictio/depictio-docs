{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#_1","title":"Home","text":"<p>       A modern platform that allows to create dashboards from bioinformatics workflows outputs.     </p> <p>       Generate dashboards using results from standardised workflows available in:     </p> Snakemake workflow catalog Interactive Dashboards <p>Create customizable dashboards with real-time data interaction</p> Cloud-Ready <p>Designed for cloud environments with Kubernetes support</p>          Get Started                 Try on Gitpod                 Learn More"},{"location":"#project-overview","title":"Project Overview","text":"<p>In the field of bioinformatics, researchers often face significant challenges when working with frequently executed production workflows, especially in managing and analyzing large-scale datasets. Despite the availability of numerous bioinformatics tools, there is a notable absence of platforms specifically designed for seamless integration with production workflows, which include standardized data ingestion, QC monitoring, and results exploration.</p> <p>Depictio addresses this gap, offering a generic and centralized platform that allows to integrate workflows output data in order to build interactive dashboards, facilitating downstream analysis and QC metrics monitoring into a cohesive system. Depictio provides a scalable, flexible, and open-source solution tailored to meet needs of researchers handling large datasets generated by production workflows, agnostically of their execution engine (nextflow, snakemake, galaxy, R \u2026).</p>"},{"location":"#key-features","title":"Key Features","text":""},{"location":"#data-ingestion","title":"Data Ingestion","text":"<ul> <li>Manual or Automated: Data ingestion can be triggered manually or through a watcher system</li> <li>Client-side scan &amp; processing: Depictio-CLI (using typer python package) allows to scan and process data locally, pushing to the S3 bucket the resulting data format ready to be used by the dashboard</li> <li>Data Types: Support for tabular data formats (Parquet, CSV, JSON, TSV, compressed/uncompressed) using Polars and Delta Lake format</li> </ul>"},{"location":"#frontend","title":"Frontend","text":"<ul> <li>Customizable Dashboards: Design and customise dashboards easily</li> <li>Interactivity: Explore data dynamically with instant updates in response to selections and inputs applied to the dashboards components</li> <li>Project-based Organization: Organize dashboards according projects, allowing easier management and sharing</li> </ul>"},{"location":"#system","title":"System","text":"<ul> <li>Scalable and Cloud-Oriented: Built for cloud environments with Kubernetes and Docker-Compose support</li> <li>Open-Source and Shareable: Community-driven development model with transparent deployment</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Ready to get started with Depictio? Check out our installation guides:</p> <ul> <li>Docker Compose Installation - Quickest way to get started</li> <li>Kubernetes Installation - For production environments</li> <li>CLI Installation - For data ingestion and management</li> </ul>"},{"location":"#funding","title":"Funding","text":"Marie Sk\u0142odowska-Curie Grant <p>This project has received funding from the European Union's Horizon 2020 research and innovation programme under the Marie Sk\u0142odowska-Curie grant agreement No 945405</p> Learn More ARISE Programme <p>ARISE is a postdoctoral research programme for technology developers, hosted at EMBL.</p> Learn More EMBL <p>The European Molecular Biology Laboratory is Europe's flagship laboratory for the life sciences.</p> Learn More"},{"location":"#academic-partners","title":"Academic Partners","text":"SciLifeLab Data Centre <p>SciLifeLab Data Centre provides data-driven life science research infrastructure and expertise to accelerate open science in Sweden and beyond.</p> Learn More"},{"location":"documentation_outline/","title":"Depictio Documentation Outline","text":"<p>This document provides an overview of the Depictio documentation structure and content. It serves as a guide for maintaining and expanding the documentation.</p>"},{"location":"documentation_outline/#documentation-structure","title":"Documentation Structure","text":"<p>The Depictio documentation is organized into the following main sections:</p>"},{"location":"documentation_outline/#home","title":"Home","text":"<ul> <li>Purpose: Provide an overview of Depictio and its key features</li> <li>Content: Project overview, key features, getting started links, documentation structure</li> <li>Files: <code>index.md</code></li> </ul>"},{"location":"documentation_outline/#installation","title":"Installation","text":"<ul> <li>Purpose: Guide users through the installation process</li> <li>Content: Installation instructions for different environments</li> <li>Files:</li> <li><code>installation/install.md</code> - Overview of installation options</li> <li><code>installation/docker.md</code> - Docker Compose installation</li> <li><code>installation/kubernetes.md</code> - Kubernetes installation</li> <li><code>installation/cli.md</code> - CLI installation</li> </ul>"},{"location":"documentation_outline/#usage","title":"Usage","text":"<ul> <li>Purpose: Help users effectively use Depictio</li> <li>Content: Getting started guides, CLI usage, web UI guides, dashboard creation and usage</li> <li>Files:</li> <li><code>usage/get_started.md</code> - Quick start guide</li> <li><code>depictio-cli/usage.md</code> - CLI usage instructions</li> <li><code>depictio-cli/full_reference_config.md</code> - YAML configuration reference</li> <li><code>usage/guides/web_ui.md</code> - Web UI guide</li> <li><code>usage/guides/dashboard_creation.md</code> - Dashboard creation guide</li> <li><code>usage/guides/dashboard_usage.md</code> - Dashboard usage guide</li> <li><code>usage/administration.md</code> - Administration guide</li> </ul>"},{"location":"documentation_outline/#features","title":"Features","text":"<ul> <li>Purpose: Describe Depictio's features and architecture</li> <li>Content: Architecture overview, modularity, and other features</li> <li>Files:</li> <li><code>features/architecture.md</code> - System architecture</li> <li><code>features/modularity.md</code> - Modularity and code structure</li> </ul>"},{"location":"documentation_outline/#api","title":"API","text":"<ul> <li>Purpose: Document the Depictio API</li> <li>Content: API overview, endpoints, authentication, and usage</li> <li>Files:</li> <li><code>api/overview.md</code> - API overview and authentication</li> <li><code>api/endpoints.md</code> - API endpoints summary</li> </ul>"},{"location":"documentation_outline/#developer","title":"Developer","text":"<ul> <li>Purpose: Provide information for developers who want to contribute</li> <li>Content: Contributing guidelines, development setup, workflow</li> <li>Files:</li> <li><code>developer/contributing.md</code> - Contributing guide</li> </ul>"},{"location":"documentation_outline/#faq","title":"FAQ","text":"<ul> <li>Purpose: Answer common questions about Depictio</li> <li>Content: General FAQs, installation FAQs, usage FAQs</li> <li>Files:</li> <li><code>FAQ/general.md</code> - General frequently asked questions</li> </ul>"},{"location":"documentation_outline/#changelog","title":"Changelog","text":"<ul> <li>Purpose: Track changes and updates to Depictio</li> <li>Content: Version history, new features, bug fixes</li> <li>Files:</li> <li><code>changelog/changelog.md</code> - Changelog</li> </ul>"},{"location":"documentation_outline/#content-guidelines","title":"Content Guidelines","text":"<p>When adding or updating documentation, please follow these guidelines:</p> <ol> <li>Clear Structure: Maintain the hierarchical structure of the documentation</li> <li>Consistent Style: Use consistent formatting and writing style</li> <li>User-Focused: Write with the user's perspective in mind</li> <li>Examples: Include examples and code snippets where appropriate</li> <li>Visuals: Use diagrams, screenshots, and other visuals to enhance understanding</li> <li>Up-to-Date: Keep documentation in sync with the latest version of Depictio</li> </ol>"},{"location":"documentation_outline/#future-expansion","title":"Future Expansion","text":"<p>The documentation can be expanded in the following areas:</p> <ol> <li>Tutorials: Step-by-step guides for common tasks</li> <li>Advanced Usage: Advanced features and configurations</li> <li>Troubleshooting: Common issues and their solutions</li> <li>API Reference: Detailed API documentation</li> <li>Component Reference: Detailed documentation for each dashboard component</li> <li>Use Cases: Real-world examples of how Depictio is being used</li> </ol>"},{"location":"FAQ/","title":"Frequently Asked Questions","text":"<p>This section addresses common questions about Depictio. If you don't find an answer to your question here, please check open an issue on GitHub.</p>"},{"location":"FAQ/#faq-categories","title":"FAQ Categories","text":"<p>The FAQ is organized into several categories to help you find answers quickly:</p>"},{"location":"FAQ/#general-questions","title":"General Questions","text":"<p>Common questions about what Depictio is, who it's for, and its key features.</p> <p>View General FAQ</p>"},{"location":"FAQ/#installation-and-setup","title":"Installation and Setup","text":"<p>Questions about system requirements, installation methods, and configuration.</p> <p>View Installation Guide</p>"},{"location":"FAQ/#usage","title":"Usage","text":"<p>Questions about creating dashboards, supported data formats, and sharing.</p> <p>View Usage Guide</p>"},{"location":"FAQ/#getting-more-help","title":"Getting More Help","text":"<p>If you can't find an answer to your question in the FAQ:</p> <ol> <li>Search the documentation: Use the search function to find relevant information</li> <li>Open an issue on GitHub: For bugs, feature requests, or other technical issues</li> </ol>"},{"location":"FAQ/faq/","title":"FAQ","text":"<p>Ongoing list of frequently asked questions.</p>"},{"location":"FAQ/faq/#know-issues","title":"Know issues","text":""},{"location":"FAQ/general/","title":"Frequently Asked Questions","text":"<p>This page addresses common questions about Depictio. If you don't find an answer to your question here, please open an issue on GitHub.</p>"},{"location":"FAQ/general/#general-questions","title":"General Questions","text":""},{"location":"FAQ/general/#what-is-depictio","title":"What is Depictio?","text":"<p>Depictio is a microservices web-based platform designed to streamline the analysis of bioinformatics workflows by enabling the creation of customized visualization dashboards. It provides a dynamic and interactive dashboard experience for quality control (QC) metrics monitoring and result exploration in omics.</p>"},{"location":"FAQ/general/#who-is-depictio-for","title":"Who is Depictio for?","text":"<p>Depictio is designed for bioinformaticians, researchers, and core facilities who work with large-scale omics datasets and need a flexible, interactive way to visualize and analyze their data. The tool is primarily designed to aggregate data from production workflows (e.g., typically nf-core). While the backend is mostly designed to be used by bioinformaticians, the frontend is user-friendly and can be used by anyone who needs to visualize and explore omics data.</p>"},{"location":"FAQ/general/#is-depictio-open-source","title":"Is Depictio open-source?","text":"<p>Yes, Depictio is an open-source project under MIT Licence. You can find the source code on GitHub.</p>"},{"location":"FAQ/general/#installation-and-setup","title":"Installation and Setup","text":""},{"location":"FAQ/general/#what-are-the-system-requirements-for-depictio","title":"What are the system requirements for Depictio?","text":"<p>Depictio is designed to run in containerized environments. The basic requirements are:</p> <ul> <li>Docker and Docker Compose (for local deployment)</li> <li>Kubernetes (for production deployment)</li> </ul>"},{"location":"FAQ/general/#how-do-i-install-depictio","title":"How do I install Depictio?","text":"<p>Please refer to our Installation Guide for detailed instructions on how to install Depictio in different environments.</p>"},{"location":"FAQ/general/#can-i-run-depictio-on-my-local-machine","title":"Can I run Depictio on my local machine?","text":"<p>Yes, you can run Depictio locally using Docker Compose. See the Docker Compose Installation Guide for details.</p>"},{"location":"FAQ/general/#usage","title":"Usage","text":""},{"location":"FAQ/general/#how-do-i-create-a-dashboard-in-depictio","title":"How do I create a dashboard in Depictio?","text":"<p>Creating dashboards in Depictio is straightforward. Please refer to our Dashboard Creation Guide for step-by-step instructions.</p>"},{"location":"FAQ/general/#what-data-formats-does-depictio-support","title":"What data formats does Depictio support?","text":"<p>Depictio currently supports all tabular formats (CSV, TSV, XLSX, Parquet, etc.) compatible with Polars. Futur versions will include support for MultiQC reports, as well as JBrowse compatible omics data formats (BED, BAM, VCF, etc.).</p>"},{"location":"FAQ/general/#can-i-share-my-dashboards-with-others","title":"Can I share my dashboards with others?","text":"<p>Depictio currently supports instance-level sharing of dashboards. You can make your dashboards public or private, and share them with other users on the same instance. Future versions will include more advanced sharing options with role-based access control (RBAC) and user groups. We're also envisioning to support sharing dashboards with external users via public links and via SciLifeLab Serve.</p>"},{"location":"FAQ/general/#technical-questions","title":"Technical Questions","text":""},{"location":"FAQ/general/#how-does-depictio-handle-large-datasets","title":"How does Depictio handle large datasets?","text":"<p>Depictio relies on Polars and Delta lake for efficient data processing and storage. This allows it to handle large datasets efficiently, leveraging lazy evaluation and optimized query execution.</p>"},{"location":"FAQ/general/#can-i-integrate-depictio-with-my-existing-workflows","title":"Can I integrate Depictio with my existing workflows?","text":"<p>Yes, Depictio is designed to integrate with existing bioinformatics workflows. The depictio-CLI tool can be used to push data from your workflows to Depictio for visualization.</p>"},{"location":"FAQ/general/#is-there-an-api-for-depictio","title":"Is there an API for Depictio?","text":"<p>Yes, Depictio provides a comprehensive REST API that allows you to interact with all aspects of the platform programmatically. See the API Reference for details.</p>"},{"location":"FAQ/general/#troubleshooting","title":"Troubleshooting","text":""},{"location":"FAQ/general/#im-having-trouble-connecting-to-the-depictio-server-what-should-i-check","title":"I'm having trouble connecting to the Depictio server. What should I check?","text":"<ol> <li>Ensure that all required services (API, Dash, MongoDB, MinIO) are running using Docker Compose or Kubernetes</li> <li>Check the logs of the services for any error messages</li> <li>Check network connectivity and firewall settings</li> <li>Verify that the server URLs are correctly configured (in the <code>.env</code> file for Docker Compose or in the Kubernetes configuration)</li> </ol>"},{"location":"FAQ/general/#how-do-i-report-a-bug-or-request-a-feature","title":"How do I report a bug or request a feature?","text":"<p>You can report bugs or request features by opening an issue on our GitHub repository. Please provide as much detail as possible to help us understand and address your issue.</p>"},{"location":"api/","title":"API Documentation","text":"<p>Depictio provides a comprehensive REST API that allows you to interact with all aspects of the platform programmatically. This section provides an overview of the API and links to detailed documentation.</p>"},{"location":"api/#overview","title":"Overview","text":"<p>The Depictio API enables you to:</p> <ul> <li>Manage projects and workflows</li> <li>Create and configure dashboards</li> <li>Upload and retrieve data</li> <li>Manage users and permissions</li> </ul> <p>All API endpoints follow RESTful principles and use JWT authentication for security.</p>"},{"location":"api/#api-structure-endpoints","title":"API Structure &amp; Endpoints","text":"<p>The Depictio API is organized around the following main resources:</p> <ul> <li>Projects - Manage top-level entities that encapsulate production-oriented pipelines/workflows</li> <li>Workflows - Interact with standardized production-oriented workflows</li> <li>Run Configurations - Define parameters and settings for workflow runs</li> <li>Runs - Manage instances of workflow executions</li> <li>Files - Access artifacts produced by workflow runs</li> <li>Data Collections - Work with aggregated data from files following the same structure</li> <li>Dashboards - Create and manage interactive visualization dashboards</li> <li>Users - Handle user authentication and authorization</li> </ul>"},{"location":"api/#authentication","title":"Authentication","text":"<p>All API requests require authentication using JWT (JSON Web Tokens). To authenticate:</p> <ol> <li>Obtain a token by sending a POST request to the <code>/auth/login</code> endpoint with your credentials</li> <li>Include the token in the <code>Authorization</code> header of subsequent requests using the format: <code>Bearer &lt;token&gt;</code></li> </ol>"},{"location":"api/#api-versioning","title":"API Versioning","text":"<p>The Depictio API uses versioning to ensure backward compatibility. The current version is <code>v1</code>, which is reflected in the URL path:</p> <pre><code>https://your-depictio-instance.com/depictio/api/v1/...\n</code></pre>"},{"location":"api/#in-this-section","title":"In This Section","text":"<ul> <li>API Overview - Detailed information about the API structure and authentication</li> </ul> <ul> <li>API Reference - Interactive API documentation generated from the OpenAPI specification</li> </ul> <ul> <li>FastAPI Docs - Access to the auto-generated FastAPI documentation</li> </ul>"},{"location":"api/api/","title":"API","text":"<p>Depictio API is built on top of FastAPI, a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints. It is designed to be easy to use and understand, with a focus on performance and scalability.</p>"},{"location":"api/api_docs_integration/","title":"API Documentation Integration","text":"<p>This page explains how to integrate the Depictio API documentation with MkDocs using the OpenAPI specification.</p>"},{"location":"api/api_docs_integration/#automated-openapi-specification-export","title":"Automated OpenAPI Specification Export","text":"<p>Depictio includes a script to automatically export the OpenAPI specification from a running API instance. This ensures that your documentation always reflects the latest API changes.</p>"},{"location":"api/api_docs_integration/#using-the-script","title":"Using the Script","text":"<p>The script is located at <code>update_openapi.py</code> in the documentation root directory. To use it:</p> <ol> <li>Make sure your Depictio API is running (typically at http://localhost:8058)</li> <li>Run the script:</li> </ol> <pre><code># From the depictio-docs directory\npython update_openapi.py\n</code></pre> <p>This will fetch the OpenAPI specification and save it to <code>docs/api/openapi.json</code>.</p>"},{"location":"api/api_docs_integration/#script-options","title":"Script Options","text":"<p>The script supports several command-line options:</p> <pre><code>python update_openapi.py --help\n</code></pre> <ul> <li><code>--api-url</code>: Base URL of the API (default: http://localhost:8058)</li> <li><code>--output</code>: Path where the OpenAPI JSON file should be saved (default: docs/api/openapi.json)</li> <li><code>--indent</code>: JSON indentation level (default: 2)</li> </ul>"},{"location":"api/api_docs_integration/#integration-with-documentation-build","title":"Integration with Documentation Build","text":"<p>You can integrate this script into your documentation build process by adding it to your build scripts or CI/CD pipeline. For example:</p> <pre><code># Start the API server\ndocker-compose up -d depictio-backend\n\n# Wait for the API to be ready\nsleep 10\n\n# Fetch the OpenAPI specification\npython update_openapi.py\n\n# Build the documentation\nmkdocs build\n</code></pre>"},{"location":"api/api_docs_integration/#displaying-api-documentation-in-mkdocs","title":"Displaying API Documentation in MkDocs","text":"<p>Once you have the OpenAPI specification, you can display it in your MkDocs site using the <code>swagger-ui-tag</code> plugin.</p>"},{"location":"api/api_docs_integration/#basic-usage","title":"Basic Usage","text":"<p>To display the API documentation on a page, add the following to your Markdown:</p> <pre><code>&lt;swagger-ui url=\"../../api/openapi.json\"/&gt;\n</code></pre> <p>The path should be relative to the current Markdown file.</p>"},{"location":"api/api_docs_integration/#customization-options","title":"Customization Options","text":"<p>You can customize the Swagger UI display with additional options:</p> <pre><code>&lt;swagger-ui\n  url=\"../../api/openapi.json\"\n  expand=\"all\"\n  theme=\"dark\"\n/&gt;\n</code></pre> <p>Available options include:</p> <ul> <li><code>expand</code>: Controls the default expansion setting for operations and tags. Values are \"list\" (default), \"full\", \"none\", or \"all\".</li> <li><code>theme</code>: The theme to use. Values are \"light\" (default) or \"dark\".</li> <li><code>try-it-out-enabled</code>: Whether to show the \"Try it out\" section. Values are \"true\" or \"false\".</li> </ul>"},{"location":"api/api_docs_integration/#example-full-api-documentation-page","title":"Example: Full API Documentation Page","text":"<p>Here's an example of a complete API documentation page:</p> <pre><code># API Reference\n\nThis page provides interactive documentation for the Depictio API.\n\n## Authentication\n\nTo use the API, you need to authenticate using JWT tokens. See the [Authentication](#/components/securitySchemes/bearerAuth) section for details.\n\n## Endpoints\n\n&lt;swagger-ui url=\"../../api/openapi.json\"/&gt;\n</code></pre>"},{"location":"api/api_docs_integration/#fallback-for-static-documentation","title":"Fallback for Static Documentation","text":"<p>If you want to provide API documentation even when the OpenAPI specification hasn't been generated (e.g., for GitHub Pages), you can include a simplified static version:</p> <pre><code>&lt;swagger-ui url=\"../../api/openapi.json\" fallback=\"true\"/&gt;\n</code></pre> <p>With the <code>fallback</code> option, if the OpenAPI specification file is not found, a message will be displayed instead of an error.</p>"},{"location":"api/api_docs_integration/#troubleshooting","title":"Troubleshooting","text":""},{"location":"api/api_docs_integration/#openapi-specification-not-found","title":"OpenAPI Specification Not Found","text":"<p>If you see an error about the OpenAPI specification not being found:</p> <ol> <li>Make sure you've run the <code>update_openapi.py</code> script</li> <li>Check that the path in the <code>url</code> attribute is correct relative to the current Markdown file</li> <li>Verify that the file exists in the expected location</li> </ol>"},{"location":"api/api_docs_integration/#swagger-ui-not-displaying","title":"Swagger UI Not Displaying","text":"<p>If the Swagger UI component is not displaying:</p> <ol> <li>Make sure the <code>swagger-ui-tag</code> plugin is installed and enabled in your <code>mkdocs.yml</code></li> <li>Check for JavaScript errors in your browser's developer console</li> <li>Try using a different browser</li> </ol>"},{"location":"api/endpoints/","title":"API Endpoints","text":"<p>This page provides an overview of the available API endpoints in Depictio. For detailed documentation on each endpoint, please refer to the API reference.</p>"},{"location":"api/endpoints/#available-endpoints","title":"Available Endpoints","text":"<ul> <li>Projects - Endpoints for managing projects</li> <li>Workflows - Endpoints for managing workflows</li> <li>Run Configurations - Endpoints for managing run configurations</li> <li>Runs - Endpoints for managing workflow runs</li> <li>Files - Endpoints for accessing files</li> <li>Data Collections - Endpoints for working with data collections</li> <li>Dashboards - Endpoints for managing dashboards</li> <li>Users - Endpoints for user management</li> </ul>"},{"location":"api/fastapi_docs/","title":"FastAPI Documentation","text":"<p>Depictio uses FastAPI for its backend, which provides automatic, interactive API documentation. This page explains how to access and use this documentation.</p>"},{"location":"api/fastapi_docs/#accessing-the-api-documentation","title":"Accessing the API Documentation","text":"<p>FastAPI automatically generates two types of interactive documentation:</p> <ol> <li>Swagger UI - Available at <code>/docs</code></li> <li>ReDoc - Available at <code>/redoc</code></li> </ol> <p>To access these, simply append these paths to your Depictio API base URL:</p> <ul> <li>Swagger UI: <code>http://&lt;your-depictio-host&gt;:8058/docs</code></li> <li>ReDoc: <code>http://&lt;your-depictio-host&gt;:8058/redoc</code></li> </ul>"},{"location":"api/reference/","title":"API Reference","text":"<p>This page provides interactive documentation for the Depictio API.</p>"},{"location":"api/reference/#interactive-api-documentation","title":"Interactive API Documentation","text":"<p>The documentation below is generated automatically from the OpenAPI specification.</p> <p></p>"},{"location":"api/reference/#using-the-api-documentation","title":"Using the API Documentation","text":"<ol> <li>Browse Endpoints: Expand the sections to see available endpoints</li> <li>Read Documentation: Each endpoint includes descriptions, parameters, and response schemas</li> <li>[Planned Feature] Try Endpoints: Click \"Try it out\" to execute API calls</li> </ol>"},{"location":"blog/","title":"Blog","text":"<p>This section is under construction and will be updated soon.</p>"},{"location":"blog/post_130525/","title":"13/05/2025 - Depictio goes live!","text":"<p>We are excited to announce that Depictio is now live! After months of hard work and dedication, we are thrilled to share our platform with the world. Depictio is designed to help you visualize and analyze your data in a more intuitive and interactive way. With Depictio, you can create stunning visualizations, build interactive dashboards, and gain insights from your data like never before. Our platform is user-friendly and flexible, making it easy for anyone to get started with data visualization. We invite you to explore Depictio and see how it can transform the way you work with data. Whether you're a data analyst, a business intelligence professional, or just someone who loves data, Depictio has something for you.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v011","title":"v0.1.1","text":""},{"location":"changelog/#docker-images","title":"Docker Images","text":"<pre><code>ghcr.io/depictio/depictio:0.1.1\nghcr.io/depictio/depictio:latest\nghcr.io/depictio/depictio:stable\nghcr.io/depictio/depictio:edge\n</code></pre>"},{"location":"changelog/#major-features","title":"\u2728 Major Features","text":"<ul> <li>UI Theming: Implemented functional dark/light modes with auto-theming, including progress on Plotly figures, dashboard button visibility, and projects section theming (a851f175, d6d83410).</li> </ul>"},{"location":"changelog/#bug-fixes","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Cypress Tests: Updated header element selectors and improved modal visibility checks in Cypress tests (b17fb7bb).</li> <li>Authentication: Removed unused expiry_minutes parameters from user upgrade API calls and fixed CI issues related to authentication (b9c5241f, 78dbc295).</li> <li>CLI Configuration: Resolved inconsistencies in CLI configuration field names and updated mock configurations for tests (ce91c581, 846fd4c1).</li> </ul>"},{"location":"changelog/#improvements","title":"Improvements \ud83d\ude80","text":"<ul> <li>Dash Components: Refactored Dash components to use updated props and styling conventions, ensuring compatibility with Dash v3 and Dash Mantine 2.0+ (8ed8f068, a7a0e3bb).</li> <li>Code Structure: Improved overall code structure for enhanced readability and maintainability across various modules (3ff3e54d, 89e62ec9).</li> </ul>"},{"location":"changelog/#chores","title":"Chores \ud83e\uddf9","text":"<ul> <li>Pre-commit: Initialized pre-commit hooks for code quality enforcement (75cb3058).</li> </ul>"},{"location":"changelog/#v010","title":"v0.1.0","text":""},{"location":"changelog/#docker-images_1","title":"Docker Images","text":"<pre><code>ghcr.io/depictio/depictio:0.1.0\nghcr.io/depictio/depictio:latest\nghcr.io/depictio/depictio:stable\nghcr.io/depictio/depictio:edge\n</code></pre>"},{"location":"changelog/#major-features_1","title":"\u2728 Major Features","text":"<ul> <li>Backup &amp; Restore: Implemented a comprehensive S3 backup and restore strategy manager, including CLI commands and endpoints for seamless integration (92ce14ff, c126e407).</li> <li>Unauthenticated Mode: Added full support for an unauthenticated mode, enabling automatic anonymous login and public access for dashboards, workflows, and data collections (7622d11f, a5d70429).</li> <li>Temporary Users: Introduced functionality for temporary users with session management and upgrade options, alongside creation and cleanup features (38ff59d7, 6caf2863).</li> <li>Google OAuth: Implemented Google OAuth authentication endpoints and updated related configurations (a07364cb, 19396605).</li> </ul>"},{"location":"changelog/#bug-fixes_1","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Screenshot Generation: Resolved screenshot endpoint authentication and CI timeout issues, and simplified screenshot generation tests (faecb4ec, 98598ee5).</li> </ul>"},{"location":"changelog/#improvements_1","title":"Improvements \ud83d\ude80","text":"<ul> <li>Performance &amp; Caching: Implemented caching for iterative joins, component data, workflows, and data collection specs to significantly enhance performance (78a7704a, cc7d7dbe).</li> <li>E2E Tests: Enhanced Cypress tests with improved Chrome configuration and reliability, including better login handling and dashboard navigation (dba2e3e3, ca9fac6c).</li> <li>Code Structure: Refactored the code structure across multiple modules for improved readability and maintainability (3f1f1b9b, dfeaf1f6).</li> <li>Logging: Reduced logging verbosity across various modules for improved log management and clarity (edd44b51, 4e408f36).</li> </ul>"},{"location":"changelog/#chores_1","title":"Chores \ud83e\uddf9","text":"<ul> <li>Changelog &amp; CI: Updated changelog generation, fixed release DNS issues in Helm CI, and added a CODEOWNERS file (dd019370).</li> </ul>"},{"location":"changelog/#v006","title":"v0.0.6","text":"<pre><code>ghcr.io/depictio/depictio:0.0.6\nghcr.io/depictio/depictio:latest\nghcr.io/depictio/depictio:stable\nghcr.io/depictio/depictio:edge\n</code></pre> <p>This release focuses on significant enhancements across Authentication, User Management, and Security, making the application more robust and secure. Key improvements include refresh token, fix issues related to outdated tokens and provide a consolidated CI workflows for the CLI.</p>"},{"location":"changelog/#features-improvements","title":"\u2728 Features &amp; Improvements","text":"<ul> <li>Authentication: Implemented refresh token support across token management, enhancing security and user session persistence (6a198be9, ae25380f).</li> <li>User Management: Updated the user creation process to allow optional user IDs and group parameters, and improved user existence checks (66d6aec9).</li> <li>Security: Added a Flask security assessment scanner for comprehensive application security checks (caa5476c).</li> </ul>"},{"location":"changelog/#cli-highlights","title":"\u2328\ufe0f CLI Highlights","text":"<ul> <li>CI/CD: Consolidated CI workflows by adding test, lint, build, and publish steps for depictio-cli (83abfc65).</li> <li>Project Structure: Updated CI workflows and initial CLI structure, removing setup.py and adjusting pyproject.toml for dependencies (2915d3d2).</li> <li>Packaging: Fixed package directory mapping and license format in pyproject.toml (9147327f, af37c922).</li> </ul>"},{"location":"changelog/#gitpod-dev-environment-highlights","title":"\ud83d\udcbb Gitpod &amp; Dev Environment Highlights","text":"<ul> <li>Setup: Added and enhanced Gitpod workspace setup, including zsh, starship configuration, and Docker permissions (e47b0c27, a1e50c03).</li> <li>Configuration: Made backend and MinIO ports visible in Gitpod configuration for easier access during development (d091cfc6).</li> <li>Environment: Updated environment configuration for Gitpod setup and adjusted logging verbosity for a cleaner development experience (6b74b5f2).</li> </ul>"},{"location":"changelog/#testing-ci-highlights","title":"\ud83e\uddea Testing &amp; CI Highlights","text":"<ul> <li>Connectivity: Enhanced inter-service connectivity tests with readiness checks and improved error handling (ea147c59).</li> <li>Release Process: Enhanced release name generation in CI to ensure DNS compliance (86d5feaf).</li> <li>Issue Templates: Improved issue templates for bug reports and feature requests to streamline contributions (a0fa5096).</li> </ul>"},{"location":"changelog/#docker-helm-highlights","title":"\ud83d\udc33 Docker &amp; Helm Highlights","text":"<ul> <li>Gunicorn: Fixed a single-worker issue with Gunicorn and optimized timeouts (16d3a92d).</li> <li>Helm: Updated public URLs in ConfigMaps and improved MongoDB connection logic and MinIO configuration in Helm charts (b93ee6cf, dce087f8).</li> <li>Helm: Fixed an issue with backend service name in the ConfigMap to enable screenshot generation (965ca53b).</li> </ul>"},{"location":"changelog/#v005","title":"v0.0.5","text":""},{"location":"changelog/#docker-images_2","title":"Docker Images","text":"<pre><code>ghcr.io/depictio/depictio:0.0.5\nghcr.io/depictio/depictio:latest\nghcr.io/depictio/depictio:stable\nghcr.io/depictio/depictio:edge\n</code></pre> <p>This version brings substantial updates to S3 &amp; Services configuration, streamlining data handling and external service integration. Notable progress has also been made in CLI execution logic and Docker build workflows, alongside critical Helm chart improvements.</p>"},{"location":"changelog/#setup-configuration-highlights","title":"\u2699\ufe0f Setup &amp; Configuration Highlights","text":"<ul> <li>S3 &amp; Services: Enhanced S3 configuration handling, logging, and URL management for better integration between internal and external services (54fec27c, 49ded59c, 5eb17f50).</li> <li>Data: Added the Palmer Penguins dataset to test and validate the sequencing-runs ingestion pipeline (0b7b1845).</li> <li>Environment: Added a step to generate the .env file from an example in deployment workflows to ensure consistency (f5ad8f11).</li> </ul>"},{"location":"changelog/#cli-highlights_1","title":"\u2328\ufe0f CLI Highlights","text":"<ul> <li>CI/CD: Added a dedicated GitHub Actions workflow for testing, linting, and building the depictio-cli package (46503f33).</li> <li>Execution: Refactored the scan/processing logic to improve logging and implemented a run function for a full, end-to-end execution of all steps (c3335e41).</li> <li>Commands: Added run and standalone commands, improved logging, and updated command documentation (0bad4848, b3d6a8a9).</li> </ul>"},{"location":"changelog/#docker-highlights","title":"\ud83d\udc33 Docker Highlights","text":"<ul> <li>CI/CD: Enhanced the Docker build workflow with improved security, better output management, and service health checks (e684982b, bb65a818).</li> <li>Configuration: Corrected the path for admin_config.yaml in the Docker copy command (77d3c4ee).</li> </ul>"},{"location":"changelog/#testing-ci-highlights_1","title":"\ud83e\uddea Testing &amp; CI Highlights","text":"<ul> <li>CI/CD Workflow Refactoring: Refactored the main deployment workflow by splitting it into smaller, more manageable CI jobs with enhanced logging (1d605c88, e8f1bbf2).</li> <li>Integration Tests: Enhanced the Iris dataset integration test with verification checks for project, deltatable, and dashboard creation (9a8a6b00).</li> <li>Test Environment: Added and refined test fixtures to properly set the DEPICTIO_CONTEXT environment variable for tests (cb64d183, 596395e6).</li> </ul>"},{"location":"changelog/#helm-highlights","title":"\u2388 Helm Highlights","text":"<ul> <li>CI/CD: Added a dedicated GitHub Actions workflow for testing, building, and pushing the Helm chart (4c965fa6).</li> <li>Configuration: Improved service port variables, initContainers, MongoDB connection logic, and MinIO configuration (959ee2e9, dce087f8).</li> <li>Storage: Added persistent volume claims for keys and adjusted default storage sizes for various components (fc0926ac, cd1de3f8).</li> <li>Ingress: Enhanced the ingress configuration with default annotations, timeout settings, and correct service hostnames (4d75fb17, 770d8e5d).</li> </ul>"},{"location":"changelog/#v004","title":"v0.0.4","text":"<p>Generating changelog from dev to v0.0.4</p>"},{"location":"changelog/#docker-images_3","title":"Docker Images","text":"<pre><code>ghcr.io/depictio/depictio:0.0.4\nghcr.io/depictio/depictio:latest\nghcr.io/depictio/depictio:stable\nghcr.io/depictio/depictio:edge\n</code></pre> <p>This release introduces a first version of project-level permissions and user management features, enhancing access control for collaboration. Major UI/UX improvements and a fundamental backend refactoring to a project-centric architecture also define this version.</p>"},{"location":"changelog/#features-improvements_1","title":"\u2728 Features &amp; Improvements","text":"<ul> <li>Permissions &amp; User Management: Introduced initial project-level permissions management, user and group management features, including endpoints and UI modals for creation, deletion, and management (d17f3690, 10af7623).</li> <li>Authentication &amp; API: Added SAML integration, API calls for token management, password editing, user registration, and improved API key validation (47e9cd43, 7b9f5437).</li> <li>Dashboarding: Enhanced dashboard public/private toggles, edit functionality, and project-specific handling, including screenshot capturing (532e9b7c, 9c192bd0).</li> </ul>"},{"location":"changelog/#ui-ux-highlights","title":"\ud83c\udfa8 UI &amp; UX Highlights","text":"<ul> <li>Modals &amp; Components: Introduced new UI components like password editing modals and stylish modals for dashboard/item creation and deletion confirmations (767908fc, 50e510b8).</li> <li>Layout &amp; Styling: Improved the layout and styling across the application, notably for project items and admin management sections, with added branding favicons (c66f4d87, 6f70d027).</li> </ul>"},{"location":"changelog/#setup-configuration","title":"\u2699\ufe0f Setup &amp; Configuration","text":"<ul> <li>Environment &amp; Logging: Refined environment variable handling and implemented centralized logging initialization (a835bb16, 2f20b67c).</li> <li>Database &amp; Storage: Enhanced MongoDB connection handling and initial project/user creation during database initialization, alongside MinIO configuration (93e3d610, cd9fa0b9).</li> </ul>"},{"location":"changelog/#docker-dev-environment-highlights","title":"\ud83d\udc33 Docker &amp; Dev Environment Highlights","text":"<ul> <li>Docker Workflows &amp; Builds: Refactored Docker workflows, enhanced environment variables, and added support for AMD64/ARM64 builds (d052856e, e0139c67).</li> <li>Devcontainer Configurations: Enhanced Gitpod and devcontainer configurations to streamline local development setup (2ae702cc).</li> </ul>"},{"location":"changelog/#testing-ci-highlights_2","title":"\ud83e\uddea Testing &amp; CI Highlights","text":"<ul> <li>GitHub Actions Workflows: Added comprehensive GitHub Actions workflows for automated release creation, changelog generation, and Docker image builds (74536b3d, 76544d7c).</li> <li>End-to-End &amp; Unit Tests: Implemented extensive end-to-end tests for user authentication and dashboard management, and comprehensive unit tests for various modules (72550ffa, df44475b).</li> </ul>"},{"location":"changelog/#beanie-implementation","title":"\ud83e\uddf1 Beanie Implementation","text":"<ul> <li>User &amp; Group Management: Implemented FastAPI user and group management with Beanie ODM, including helpers for user and group creation (6470af84).</li> <li>Testing &amp; Model Integration: Added Beanie setup for various tests and updated model references for consistent integration (ec008e0f).</li> </ul>"},{"location":"changelog/#code-refactoring","title":"\u267b\ufe0f Code Refactoring","text":"<ul> <li>Code Organization &amp; Clarity: Performed refactoring of import statements, code organization, and whitespace across numerous files (f8b0f913, 239ad86e).</li> <li>API &amp; Data Models: Refactored API and data models to use depictio-models as a centralized library and updated dependencies to Pydantic v2 (2170ae17, e8397589).</li> </ul>"},{"location":"changelog/#bug-fixes_2","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>CI/CD &amp; Deployment: Corrected workflow triggers and addressed various Docker and Helm deployment issues, including volume paths and logging (14539146, a376bf98).</li> <li>Data &amp; Configuration Paths: Corrected various file paths, IDs, and configurations for consistency and relative access (a835bb16, 214659e3).</li> <li>User &amp; Authentication: Addressed issues with user fetching functions, replacing deprecated calls and ensuring proper asynchronous execution (f334386c, 725c3d98).</li> </ul>"},{"location":"changelog/#documentation","title":"Documentation","text":"<p>Full documentation: https://depictio.github.io/depictio-docs/</p>"},{"location":"changelog/#v003","title":"v0.0.3","text":""},{"location":"changelog/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>Component size were modified to reflect better size on the dashboard</li> </ul>"},{"location":"changelog/#features","title":"Features","text":"<ul> <li>Edit component (goes to design part (step 3 of component creation))</li> <li>Display/hide component options</li> <li>Component options to dmc.ActionIcon (smaller icons without text)</li> <li>Reset all filters button</li> <li>Change offcanvas sidebar layout</li> <li>Admin view (list dashboards)</li> <li>Graph interaction (click, select data through \"Box select\")</li> <li>Reset graph interaction (via dedicated button)</li> <li>Public/private dashboard (public dashboards are visible but not editable by all users ; possibility to copy public dashboard to private personal dashboard)</li> </ul>"},{"location":"changelog/#v002","title":"v0.0.2","text":""},{"location":"changelog/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>Switch from dashboard &amp; component ID increment to UUID</li> <li>Fix double click on add component button</li> </ul>"},{"location":"changelog/#features_1","title":"Features","text":"<ul> <li>Autosave dashboard</li> <li>Duplicate dashboard</li> <li>Edit dashboard name</li> <li>Admin view (list users)</li> </ul>"},{"location":"changelog/#v001","title":"v0.0.1","text":""},{"location":"changelog/#features_2","title":"Features","text":"<ul> <li>Initial release of the project</li> <li>Support for creating dashboards with multiple components (figure, metrics card, interactive &amp; table)</li> <li>Drag &amp; layout components on the dashboard</li> <li>Delete components</li> </ul>"},{"location":"changelog/v0.1.0-b8/","title":"Changelog v0.1.0-b8","text":""},{"location":"changelog/v0.1.0-b8/#v010-b8-current-development-version","title":"v0.1.0-b8 (Current Development Version)","text":""},{"location":"changelog/v0.1.0-b8/#docker-images","title":"Docker Images","text":"<pre><code>ghcr.io/depictio/depictio:0.1.0-b8\nghcr.io/depictio/depictio:latest\nghcr.io/depictio/depictio:edge\n</code></pre> <p>This changelog covers all major changes from v0.0.6 to v0.1.0-b8, representing a significant evolution of the Depictio platform with major new features, improved performance, enhanced security, and comprehensive backup/restore capabilities.</p>"},{"location":"changelog/v0.1.0-b8/#major-highlights","title":"\u2728 Major Highlights","text":""},{"location":"changelog/v0.1.0-b8/#authentication-security-overhaul","title":"\ud83d\udd10 Authentication &amp; Security Overhaul","text":"<ul> <li>Google OAuth Integration: Complete OAuth authentication system for seamless user login</li> <li>Unauthenticated Mode: Support for anonymous access with temporary users and public dashboards</li> <li>Enhanced API Security: Internal API key management with environment variable support</li> <li>Advanced Permission System: Project-based permissions for dashboards with user management</li> </ul>"},{"location":"changelog/v0.1.0-b8/#backup-restore-system","title":"\ud83d\udce6 Backup &amp; Restore System","text":"<ul> <li>Comprehensive Backup Strategy: S3-compatible backup and restore functionality</li> <li>Multiple Storage Options: Local, S3-to-S3, and hybrid backup strategies</li> <li>CLI Integration: Full backup/restore commands with validation and coverage checks</li> <li>MongoDB Integration: Complete database backup with document validation</li> </ul>"},{"location":"changelog/v0.1.0-b8/#performance-infrastructure","title":"\ud83d\ude80 Performance &amp; Infrastructure","text":"<ul> <li>Astral Type Checker Integration: Complete migration to <code>ty</code> for enhanced type safety</li> <li>Environment-specific Performance Settings: Optimized timeouts and configurations</li> <li>Caching System: Component data, workflows, and join table caching for improved performance</li> <li>Screenshot Generation: Enhanced dashboard screenshot capabilities with retry logic</li> </ul>"},{"location":"changelog/v0.1.0-b8/#user-experience-improvements","title":"\ud83d\udc65 User Experience Improvements","text":"<ul> <li>Temporary User System: Session-based anonymous users with optional account upgrade</li> <li>Enhanced Project Management: Workflow uniqueness validation and improved permissions</li> <li>Dashboard Performance: Iterative join processing and data loading optimization</li> <li>CLI Enhancements: Improved configuration handling and API base URL management</li> </ul>"},{"location":"changelog/v0.1.0-b8/#authentication-security","title":"\ud83d\udd10 Authentication &amp; Security","text":""},{"location":"changelog/v0.1.0-b8/#google-oauth-authentication","title":"Google OAuth Authentication","text":"<ul> <li>New Feature: Complete Google OAuth integration with redirect URL generation</li> <li>User Management: Automatic user creation for new OAuth users</li> <li>Token Exchange: Secure token handling for OAuth authentication flow</li> <li>Environment Configuration: Google OAuth client configuration support</li> </ul>"},{"location":"changelog/v0.1.0-b8/#unauthenticated-mode","title":"Unauthenticated Mode","text":"<ul> <li>Anonymous Access: Support for public dashboard viewing without registration</li> <li>Temporary Users: Session-based users with configurable expiration times</li> <li>Public Content: Public dashboards, workflows, and data collections</li> <li>Account Upgrade: Option to convert temporary accounts to permanent users</li> </ul>"},{"location":"changelog/v0.1.0-b8/#enhanced-api-security","title":"Enhanced API Security","text":"<ul> <li>Internal API Keys: Automatic generation and management of internal API keys</li> <li>Environment Variables: Support for <code>DEPICTIO_AUTH_INTERNAL_API_KEY</code></li> <li>Key File Management: Persistent key storage with Kubernetes support</li> <li>Initialization Containers: Wait-for-API-key containers in deployment</li> </ul>"},{"location":"changelog/v0.1.0-b8/#backup-restore-system_1","title":"\ud83d\udce6 Backup &amp; Restore System","text":""},{"location":"changelog/v0.1.0-b8/#backup-strategies","title":"Backup Strategies","text":"<ul> <li>S3 Integration: Complete S3/MinIO backup functionality</li> <li>Multiple Strategies: Local, S3-to-S3, and both backup options</li> <li>MongoDB Backup: Full database backup with collection coverage</li> <li>Document Validation: Backup integrity checks and validation</li> </ul>"},{"location":"changelog/v0.1.0-b8/#cli-backup-commands","title":"CLI Backup Commands","text":"<ul> <li>Create Backups: <code>depictio backup create</code> with dry-run support</li> <li>List Backups: <code>depictio backup list</code> with file details</li> <li>Validate Backups: <code>depictio backup validate</code> with integrity checks</li> <li>Coverage Check: <code>depictio backup check-coverage</code> for collection analysis</li> </ul>"},{"location":"changelog/v0.1.0-b8/#backup-configuration","title":"Backup Configuration","text":"<ul> <li>BackupConfig Class: Centralized backup settings management</li> <li>S3 Location Handling: Dynamic endpoint and bucket configuration</li> <li>Environment Integration: Docker Compose and Kubernetes support</li> <li>Logging &amp; Verification: Comprehensive backup process logging</li> </ul>"},{"location":"changelog/v0.1.0-b8/#performance-infrastructure_1","title":"\ud83d\ude80 Performance &amp; Infrastructure","text":""},{"location":"changelog/v0.1.0-b8/#type-safety-with-astral-ty","title":"Type Safety with Astral <code>ty</code>","text":"<ul> <li>Complete Migration: Transition from mypy to Astral's <code>ty</code> type checker</li> <li>Zero Type Errors: Achievement of perfect type safety across codebase</li> <li>CLI Integration: Type checking for CLI folder and enhanced configuration</li> <li>Model Validation: Improved Pydantic model validation and handling</li> </ul>"},{"location":"changelog/v0.1.0-b8/#performance-optimizations","title":"Performance Optimizations","text":"<ul> <li>Caching System: Component data, workflows, and join table caching</li> <li>Iterative Joins: Optimized join processing for large datasets</li> <li>Post-join Filtering: Enhanced filtering for interactive components</li> <li>Data Loading: Improved DataFrame handling and empty data management</li> </ul>"},{"location":"changelog/v0.1.0-b8/#infrastructure-improvements","title":"Infrastructure Improvements","text":"<ul> <li>Environment-specific Settings: PerformanceConfig class for timeout management</li> <li>Service Readiness: Enhanced readiness checks with retry logic</li> <li>Screenshot Services: Improved screenshot generation with timeout handling</li> <li>Network Activity: Enhanced logging and monitoring capabilities</li> </ul>"},{"location":"changelog/v0.1.0-b8/#user-experience-interface","title":"\ud83d\udc65 User Experience &amp; Interface","text":""},{"location":"changelog/v0.1.0-b8/#temporary-user-system","title":"Temporary User System","text":"<ul> <li>Session Management: Temporary users with configurable expiration</li> <li>Cleanup Tasks: Automatic temporary user cleanup functionality</li> <li>Upgrade Options: Convert temporary to permanent accounts</li> <li>Anonymous Sessions: Enhanced session handling for unauthenticated users</li> </ul>"},{"location":"changelog/v0.1.0-b8/#project-dashboard-management","title":"Project &amp; Dashboard Management","text":"<ul> <li>Workflow Uniqueness: Validation for project creation and updates</li> <li>Project Permissions: Enhanced user management and role-based access</li> <li>Dashboard Permissions: Project-based dashboard access control</li> <li>User Interface: Improved UI consistency with button size updates</li> </ul>"},{"location":"changelog/v0.1.0-b8/#performance-features","title":"Performance Features","text":"<ul> <li>Dashboard Health Checks: Infrastructure diagnostics and monitoring</li> <li>Navigation Strategies: Hybrid navigation with network activity logging</li> <li>API Optimizations: Reduced redundant requests with user data caching</li> <li>Component Optimization: MongoDB aggregation for improved access control</li> </ul>"},{"location":"changelog/v0.1.0-b8/#developer-experience","title":"\ud83d\udee0\ufe0f Developer Experience","text":""},{"location":"changelog/v0.1.0-b8/#cli-improvements","title":"CLI Improvements","text":"<ul> <li>Configuration Handling: Enhanced CLI config with API base URL support</li> <li>Model Refactoring: Simplified user models and token management</li> <li>Error Handling: Improved error messages and validation</li> <li>Documentation: Added CLAUDE.md for development guidance</li> </ul>"},{"location":"changelog/v0.1.0-b8/#testing-quality","title":"Testing &amp; Quality","text":"<ul> <li>Enhanced Test Coverage: Comprehensive unit and integration tests</li> <li>Mock Configurations: Updated test fixtures for new token structure</li> <li>CI/CD Improvements: Enhanced workflows with better caching and verification</li> <li>Code Quality: Logging verbosity control and code organization</li> </ul>"},{"location":"changelog/v0.1.0-b8/#architecture-improvements","title":"Architecture Improvements","text":"<ul> <li>Service Integration: Better inter-service communication</li> <li>Configuration Management: Environment-based settings and validation</li> <li>Error Recovery: Enhanced error handling and fallback mechanisms</li> <li>Documentation: Comprehensive architecture documentation</li> </ul>"},{"location":"changelog/v0.1.0-b8/#bug-fixes-improvements","title":"\ud83d\udc1b Bug Fixes &amp; Improvements","text":""},{"location":"changelog/v0.1.0-b8/#token-authentication-fixes","title":"Token &amp; Authentication Fixes","text":"<ul> <li>Token Validation: Fixed token lookup and validation logic</li> <li>User Session: Improved session data retrieval and fallback handling</li> <li>Configuration: Resolved CLI configuration validation errors</li> <li>API Endpoints: Enhanced token-based endpoint security</li> </ul>"},{"location":"changelog/v0.1.0-b8/#database-storage-fixes","title":"Database &amp; Storage Fixes","text":"<ul> <li>MongoDB Connectivity: Improved connection retry patterns and testing</li> <li>S3 Configuration: Fixed endpoint URL and credential handling</li> <li>Data Collections: Resolved ObjectId conversion and validation issues</li> <li>Cache Management: Fixed caching inconsistencies and data refresh</li> </ul>"},{"location":"changelog/v0.1.0-b8/#ui-frontend-fixes","title":"UI &amp; Frontend Fixes","text":"<ul> <li>Screenshot Generation: Resolved authentication and timeout issues</li> <li>Dashboard Loading: Fixed data loading and component refresh problems</li> <li>Permission Checks: Corrected edit permissions for non-owner users</li> <li>Navigation: Enhanced navigation reliability and error handling</li> </ul>"},{"location":"changelog/v0.1.0-b8/#version-history-v006-to-v010-b8","title":"\ud83d\udccb Version History (v0.0.6 to v0.1.0-b8)","text":""},{"location":"changelog/v0.1.0-b8/#v010-b8-latest","title":"v0.1.0-b8 (Latest)","text":"<ul> <li>Final type checking compliance and test fixes</li> <li>Enhanced CLI and user models configuration</li> <li>Completed backup and restore system</li> </ul>"},{"location":"changelog/v0.1.0-b8/#v010-b7","title":"v0.1.0-b7","text":"<ul> <li>Infrastructure diagnostics and health checks</li> <li>Performance settings optimization</li> <li>Enhanced dashboard data handling</li> </ul>"},{"location":"changelog/v0.1.0-b8/#v010-b6","title":"v0.1.0-b6","text":"<ul> <li>Environment-specific timeout settings</li> <li>API call function refactoring</li> <li>Service readiness improvements</li> </ul>"},{"location":"changelog/v0.1.0-b8/#v010-b5","title":"v0.1.0-b5","text":"<ul> <li>Hybrid navigation strategy implementation</li> <li>Enhanced network activity logging</li> <li>Performance configuration class</li> </ul>"},{"location":"changelog/v0.1.0-b8/#v010-b4","title":"v0.1.0-b4","text":"<ul> <li>Screenshot endpoint service readiness</li> <li>Retry logic implementation</li> <li>Dashboard functionality updates</li> </ul>"},{"location":"changelog/v0.1.0-b8/#v010-b3-b2","title":"v0.1.0-b3 &amp; b2","text":"<ul> <li>Screenshot API endpoint updates</li> <li>Token retrieval logging</li> <li>User data management improvements</li> </ul>"},{"location":"changelog/v0.1.0-b8/#v010-b1","title":"v0.1.0-b1","text":"<ul> <li>Major version transition from v0.0.6</li> <li>Unauthenticated mode implementation</li> <li>Anonymous user session handling</li> </ul>"},{"location":"changelog/v0.1.0-b8/#migration-notes","title":"\ud83d\udd04 Migration Notes","text":""},{"location":"changelog/v0.1.0-b8/#breaking-changes","title":"Breaking Changes","text":"<ul> <li>Type System: Migration from mypy to <code>ty</code> may require type annotation updates</li> <li>Authentication: New OAuth system may require configuration updates</li> <li>CLI Configuration: Updated CLI config structure with new field names</li> <li>API Endpoints: Some endpoint signatures changed for enhanced security</li> </ul>"},{"location":"changelog/v0.1.0-b8/#upgrade-recommendations","title":"Upgrade Recommendations","text":"<ol> <li>Update Configuration: Review and update environment variables for new features</li> <li>Test Authentication: Verify OAuth configuration and API key setup</li> <li>Check Backups: Validate backup configuration and test restore procedures</li> <li>Performance Review: Monitor performance improvements and adjust settings as needed</li> </ol>"},{"location":"changelog/v0.1.0-b8/#documentation","title":"\ud83d\udcda Documentation","text":"<ul> <li>Full Documentation: https://depictio.github.io/depictio-docs/</li> <li>Architecture Guide: Available in CLAUDE.md in the repository</li> <li>API Documentation: Updated OpenAPI specifications</li> <li>Installation Guide: Updated for new authentication and backup features</li> </ul> <p>This release represents a major milestone in Depictio's evolution, focusing on enterprise-ready features, enhanced security, and improved performance while maintaining ease of use and comprehensive functionality.</p>"},{"location":"depictio-cli/full_reference_config/","title":"Full Reference Configuration","text":"<p>Warning</p> <p>This is not recommended to copy and paste the configuration as is. The configuration is meant to be a reference and should be modified to fit your specific use case.</p> <p>This is a full reference configuration example file for the Depictio CLI. It includes all available options and their descriptions. You can use this as a template to create your own configuration file.</p> <pre><code># Required: Name of the project\n\nname: \"Strand-Seq data analysis\"\n\n# Optional : the URL of an external project management system reference\ndata_management_platform_project_url: \"https://labid.embl.org/core/projects/default/5baa8f07-bd00-46e7-b3cb-ec79d01f6f3c\"\n\n# Required: Workflows that are available in the system\nworkflows:\n  # Required: The name of the workflow\n  - name: \"mosaicatcher-pipeline\"\n\n    # Required: Engine that is used to run the workflow\n    engine:\n      # Required: The name of the engine\n      name: \"snakemake\"\n\n      # Optional: The version of the engine\n      version: \"7.32.0\"\n\n    # Optional : the URL of an external workflow catalog reference\n    catalog:\n      # Required: The name of the catalog (valid values: \"smk-wf-catalog\", \"nf-core\", \"workflowhub\")\n      name: \"smk-wf-catalog\"\n\n      # Required: The URL of the catalog\n      url: \"https://snakemake.github.io/snakemake-workflow-catalog/?repo=friendsofstrandseq/mosaicatcher-pipeline\"\n\n    # Optional: The description of the workflow\n    description: \"Strand-Seq SV calling framework\"\n\n    # Optional: The URL of the repository that contains the workflow\n    repository_url: \"https://github.com/friendsofstrandseq/mosaicatcher-pipeline\"\n\n    # Optional: Version of the workflow\n    version: \"2.3.5\"\n\n    # Required: The configuration to retrieve workflow data\n    config:\n      # Required: List of locations containing the workflow runs - multiple locations can be specified\n      parent_runs_location:\n        # Paths can be absolute or relative to the configuration file\n\n        # Paths can contain environment variables which are resolved at runtime\n        - \"{DATA_LOCATION}/mosaicatcher-pipeline-2024\"\n\n      # Required: Regular expression to search the runs\n      runs_regex: \".*\"\n\n    # Required: Data collections that are associated with the workflow\n    data_collections:\n      # Required: The tag that is used to identify the data collection\n      - data_collection_tag: \"mosaicatcher_stats\"\n\n        # Optional: A description of the data collection\n        description: \"Statistics file generated by MosaiCatcher\"\n\n        # Required: The configuration of the data collection\n        config:\n          # Required: The type of the data collection (options: Table, JBrowse2)\n          type: \"Table\"\n\n          # Required: The metatype of the data collection (options: Metadata, Aggregate ; Metadata corresponds to a single annotation file, Aggregate to the aggregation of multiple files into a single dataframe)\n          metatype: \"Aggregate\"\n\n          # Required: The configuration to scan the data collection files\n          scan:\n            # Required: The mode of the scan (options: single, recursive)\n            # single: scan a single file\n            # recursive: scan all files in a directory and its subdirectories\n            mode: recursive\n\n            # Required: The parameters of the scan - depends on the mode\n            scan_parameters:\n              # Required: The filename or directory to scan\n\n              # If mode is recursive, use regex_config\n              regex_config:\n                # Required: The pattern to search for files\n                pattern: \".*.info_raw\"\n\n              # If mode is single, use filename\n              filename: \"file_path.txt\"\n\n          # Required: The specific properties of the data collection - is related to the type of the data collection (Table here)\n          dc_specific_properties:\n            # Required: The file format of the data collection (options: CSV, TSV, XLSX, HDF5, Parquet)\n            format: \"TSV\"\n\n            # Required: The configuration of the Polars DataFrame for the data collection\n            polars_kwargs:\n              skip_rows: 13\n              separator: \"\\t\"\n              # Other options for polars_kwargs:\n              # - column_types\n              # - column_names\n              # ...\n\n            # Optional: The columns that are kept in the table - all other columns are dropped\n            keep_columns:\n              - \"sample\"\n              - \"cell\"\n              - \"mapped\"\n              - \"dupl\"\n              - \"pass1\"\n              - \"good\"\n\n            # Optional: The description of the columns\n            columns_description:\n              sample: \"Sample ID\"\n              cell: \"Cell ID\"\n              mapped: \"Total number of reads seen\"\n              dupl: \"Reads filtered out as PCR duplicates\"\n              pass1: \"Coverage compliant cells (binary)\"\n              good: \"Reads used for counting\"\n\n          # Optional: Allow to join the data collections over specific columns or conditions\n          join:\n            # Required: The columns that are used to join the data collections\n            on_columns:\n              - \"sample\"\n              - \"cell\"\n\n            # Required: The type of join that is used to join the data collections\n            how: \"inner\"\n\n            # Required: The list of data collections that are used to join the data collection\n            with_dc:\n              - \"ashleys_labels\"\n</code></pre>"},{"location":"depictio-cli/minimal_config/","title":"Minimal Reference Configuration","text":"<p>Warning</p> <p>This is not recommended to copy and paste the configuration as is. The configuration is meant to be a example and should be modified to fit your specific use case.</p> <p>This is a minimal reference configuration example file for the Depictio CLI. It includes the minimum required options and their descriptions. You can use this as a template to create your own configuration file.</p> <pre><code>name: \"Example project\"\n# Workflows section\nworkflows:\n  - name: \"example_workflow\"\n    engine:\n      name: \"python\"\n    config:\n      parent_runs_location:\n        - \"/home/user/data/example_workflow\"\n      runs_regex: \".*\"\n    # Data collections section\n    data_collections:\n      - data_collection_tag: \"example_data_collection\"\n        config:\n          type: \"Table\"\n          metatype: \"Aggregate\"\n          scan:\n            mode: recursive\n            scan_parameters:\n              regex_config:\n                pattern: \"*.stats.tsv\"\n          dc_specific_properties:\n            format: \"TSV\"\n            polars_kwargs:\n              separator: \"\\t\"\n</code></pre>"},{"location":"depictio-cli/usage/","title":"Depictio CLI Usage","text":"<p>Note about the CLI</p> <p>The depictio-cli is a command line interface that allows you to interact with the Depictio backend. It is used to register projects information including workflow files metadata. The depictio-cli is currently in development and is not yet ready for production use.</p>"},{"location":"depictio-cli/usage/#table-of-contents","title":"\ud83d\udcda Table of Contents","text":"<ul> <li>Installation</li> <li>Quick Reference</li> <li>Global Options</li> <li>\ud83d\ude80 Commands</li> <li>\ud83d\udccb Config Commands</li> <li>\ud83d\udcca Data Commands</li> <li>\ud83d\udcbe Backup Commands</li> <li>\ud83c\udfc3 Run Command</li> <li>\ud83d\udee0\ufe0f Common Use Cases</li> <li>\ud83d\udd27 Error Handling</li> </ul>"},{"location":"depictio-cli/usage/#installation","title":"Installation","text":"<p>See the installation guide for instructions on how to install the depictio-cli.</p>"},{"location":"depictio-cli/usage/#quick-reference","title":"Quick Reference","text":"Command Description Access Level <code>version</code> Show CLI version All users <code>run</code> Execute complete workflow All users <code>config show-cli-config</code> Display CLI configuration All users <code>config check-s3-storage</code> Validate S3 storage setup All users <code>config check-server-accessibility</code> Test server connection All users <code>config validate-project-config</code> Validate project configuration All users <code>config sync-project-config-to-server</code> Sync project config to server All users <code>data scan</code> Scan project files All users <code>data process</code> Process data collections All users <code>backup backup</code> Create system backup Admin only <code>backup restore</code> Restore from backup Admin only <code>backup list-backups</code> List available backups Admin only"},{"location":"depictio-cli/usage/#global-options","title":"Global Options","text":"Option Short Type Default Description <code>--verbose</code> <code>-v</code> <code>boolean</code> <code>false</code> Enable verbose logging <code>--verbose-level</code> <code>-vl</code> <code>string</code> <code>\"INFO\"</code> Set verbose logging level"},{"location":"depictio-cli/usage/#commands","title":"\ud83d\ude80 Commands","text":""},{"location":"depictio-cli/usage/#run-command","title":"\ud83c\udfc3 Run Command","text":"<p>Execute the complete Depictio workflow: validate \u2192 sync \u2192 scan \u2192 process</p> <pre><code>depictio-cli run [OPTIONS]\n</code></pre> <p>Quick Start:</p> <pre><code>depictio-cli run --project-config-path ./config.yaml\n</code></pre> <p>Pipeline Steps:</p> <ol> <li>\u2705 Check server accessibility</li> <li>\u2705 Check S3 storage configuration</li> <li>\u2705 Validate project configuration</li> <li>\u2705 Sync project configuration to server</li> <li>\u2705 Scan data files</li> <li>\u2705 Process data collections</li> </ol> \ud83d\udccb Basic Configuration Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <code>--project-config-path</code> <code>string</code> <code>\"\"</code> Pipeline configuration file path <code>--workflow-name</code> <code>string</code> <code>null</code> Specific workflow to process <code>--data-collection-tag</code> <code>string</code> <code>null</code> Data collection tag to process \u2699\ufe0f Flow Control Options Parameter Type Default Description <code>--skip-server-check</code> <code>boolean</code> <code>false</code> Skip server accessibility check <code>--skip-s3-check</code> <code>boolean</code> <code>false</code> Skip S3 storage validation <code>--skip-sync</code> <code>boolean</code> <code>false</code> Skip config sync to server <code>--skip-scan</code> <code>boolean</code> <code>false</code> Skip data scanning step <code>--skip-process</code> <code>boolean</code> <code>false</code> Skip data processing step \ud83d\udd04 Sync &amp; Scan Options Parameter Type Default Description <code>--update-config</code> <code>boolean</code> <code>false</code> Update project configuration on server <code>--rescan-folders</code> <code>boolean</code> <code>false</code> Reprocess all runs for data collection <code>--sync-files</code> <code>boolean</code> <code>false</code> Update files for data collection <code>--overwrite</code> <code>boolean</code> <code>false</code> Overwrite workflow if it already exists \ud83d\udda5\ufe0f Output &amp; Control Parameter Type Default Description <code>--rich-tables</code> <code>boolean</code> <code>false</code> Show detailed execution summary <code>--continue-on-error</code> <code>boolean</code> <code>false</code> Continue execution on step failure <code>--dry-run</code> <code>boolean</code> <code>false</code> Show execution plan without running <p>Examples:</p> Basic Usage <pre><code># Complete workflow execution\ndepictio-cli run --project-config-path ./config.yaml\n</code></pre> Development <pre><code># With detailed output and error handling\ndepictio-cli run \\\n  --project-config-path ./config.yaml \\\n  --continue-on-error \\\n  --rich-tables\n</code></pre> Dry Run <pre><code># Preview execution without running\ndepictio-cli run \\\n  --project-config-path ./config.yaml \\\n  --dry-run\n</code></pre> Skip Steps <pre><code># Skip server checks for faster execution\ndepictio-cli run \\\n  --project-config-path ./config.yaml \\\n  --skip-server-check \\\n  --skip-s3-check\n</code></pre>"},{"location":"depictio-cli/usage/#config-commands","title":"\ud83d\udccb Config Commands","text":"<p>Command Group: <code>depictio-cli config</code></p> <p>All commands in this section are part of the <code>config</code> command family. Use them to manage Depictio configurations and validate connections.</p> <p>Manage Depictio configurations and validate connections.</p>"},{"location":"depictio-cli/usage/#config-show-cli-config","title":"<code>config show-cli-config</code>","text":"<p>Display the current CLI configuration.</p> <pre><code>depictio-cli config show-cli-config [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <pre><code>depictio-cli config show-cli-config\n</code></pre>"},{"location":"depictio-cli/usage/#config-check-s3-storage","title":"<code>config check-s3-storage</code>","text":"<p>Validate S3 storage configuration.</p> <pre><code>depictio-cli config check-s3-storage [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <pre><code>depictio-cli config check-s3-storage\n</code></pre>"},{"location":"depictio-cli/usage/#config-check-server-accessibility","title":"<code>config check-server-accessibility</code>","text":"<p>Test connection to Depictio server.</p> <pre><code>depictio-cli config check-server-accessibility [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <pre><code>depictio-cli config check-server-accessibility\n</code></pre>"},{"location":"depictio-cli/usage/#config-show-depictio-project-metadata-on-server","title":"<code>config show-depictio-project-metadata-on-server</code>","text":"<p>Display metadata for registered projects.</p> <pre><code>depictio-cli config show-depictio-project-metadata-on-server [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <code>--project-name</code> <code>string</code> <code>\"\"</code> Specific project name <pre><code>depictio-cli config show-depictio-project-metadata-on-server --project-name my-project\n</code></pre>"},{"location":"depictio-cli/usage/#config-validate-project-config","title":"<code>config validate-project-config</code>","text":"<p>Validate project configuration file.</p> <pre><code>depictio-cli config validate-project-config [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <code>--project-config-path</code> <code>string</code> <code>\"\"</code> Pipeline configuration file path <pre><code>depictio-cli config validate-project-config --project-config-path ./config.yaml\n</code></pre>"},{"location":"depictio-cli/usage/#config-sync-project-config-to-server","title":"<code>config sync-project-config-to-server</code>","text":"<p>Sync project configuration to server.</p> <pre><code>depictio-cli config sync-project-config-to-server [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <code>--project-config-path</code> <code>string</code> <code>\"\"</code> Pipeline configuration file path <code>--update</code> <code>boolean</code> <code>false</code> Update existing project configuration <pre><code>depictio-cli config sync-project-config-to-server --project-config-path ./config.yaml --update\n</code></pre>"},{"location":"depictio-cli/usage/#data-commands","title":"\ud83d\udcca Data Commands","text":"<p>Command Group: <code>depictio-cli data</code></p> <p>All commands in this section are part of the <code>data</code> command family. Use them to manage data scanning and processing operations.</p> <p>Manage data scanning and processing operations.</p>"},{"location":"depictio-cli/usage/#data-scan","title":"<code>data scan</code>","text":"<p>Scan project files for data collections.</p> <pre><code>depictio-cli data scan [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <code>--project-config-path</code> <code>string</code> <code>\"\"</code> Pipeline configuration file path <code>--workflow-name</code> <code>string</code> <code>null</code> Specific workflow to scan <code>--data-collection-tag</code> <code>string</code> <code>null</code> Data collection tag to scan <code>--rescan-folders</code> <code>boolean</code> <code>false</code> Reprocess all runs for data collection <code>--sync-files</code> <code>boolean</code> <code>false</code> Update files for data collection <pre><code>depictio-cli data scan --project-config-path ./config.yaml --workflow-name my-workflow\n</code></pre>"},{"location":"depictio-cli/usage/#data-process","title":"<code>data process</code>","text":"<p>Process data collections for workflow execution.</p> <pre><code>depictio-cli data process [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <code>--project-config-path</code> <code>string</code> <code>\"\"</code> Pipeline configuration file path <code>--overwrite</code> <code>boolean</code> <code>false</code> Overwrite existing workflow <pre><code>depictio-cli data process --project-config-path ./config.yaml --overwrite\n</code></pre>"},{"location":"depictio-cli/usage/#backup-commands","title":"\ud83d\udcbe Backup Commands","text":"<p>Command Group: <code>depictio-cli backup</code></p> <p>All commands in this section are part of the <code>backup</code> command family. Use them to backup and restore system data and configurations.</p> <p>Backup and restore system data and configurations.</p> <p>Admin Access Required</p> <p>Backup and restore commands require administrator privileges. Only users with admin access can perform backup and restore operations. Ensure your CLI configuration includes admin credentials.</p>"},{"location":"depictio-cli/usage/#backup-backup","title":"<code>backup backup</code>","text":"<p>Create a backup of database and S3 storage data.</p> <pre><code>depictio-cli backup backup [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <code>--backup-name</code> <code>string</code> <code>timestamp</code> Name for the backup <code>--include-s3</code> <code>boolean</code> <code>true</code> Include S3 storage data in backup <code>--include-db</code> <code>boolean</code> <code>true</code> Include database data in backup <code>--output-path</code> <code>string</code> <code>./backups</code> Path where backup files are stored <pre><code>depictio-cli backup backup --backup-name production-backup --output-path ./backups\n</code></pre>"},{"location":"depictio-cli/usage/#backup-restore","title":"<code>backup restore</code>","text":"<p>Restore data from a previously created backup.</p> <pre><code>depictio-cli backup restore [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--CLI-config-path</code> <code>string</code> <code>~/.depictio/CLI.yaml</code> CLI configuration file path <code>--backup-path</code> <code>string</code> required Path to backup file or directory <code>--restore-s3</code> <code>boolean</code> <code>true</code> Restore S3 storage data <code>--restore-db</code> <code>boolean</code> <code>true</code> Restore database data <code>--force</code> <code>boolean</code> <code>false</code> Force restore without confirmation <pre><code>depictio-cli backup restore --backup-path ./backups/production-backup --force\n</code></pre>"},{"location":"depictio-cli/usage/#backup-list-backups","title":"<code>backup list-backups</code>","text":"<p>List all available backups.</p> <pre><code>depictio-cli backup list-backups [OPTIONS]\n</code></pre> Parameter Type Default Description <code>--backup-path</code> <code>string</code> <code>./backups</code> Path to backup directory <pre><code>depictio-cli backup list-backups --backup-path ./backups\n</code></pre>"},{"location":"depictio-cli/usage/#common-use-cases","title":"\ud83d\udee0\ufe0f Common Use Cases","text":""},{"location":"depictio-cli/usage/#quick-start","title":"\ud83d\ude80 Quick Start","text":"Complete Setup <pre><code># 1. Validate your project configuration\ndepictio-cli config validate-project-config --project-config-path ./config.yaml\n\n# 2. Run the complete workflow\ndepictio-cli run --project-config-path ./config.yaml\n</code></pre> Step by Step <pre><code># 1. Check system status\ndepictio-cli config check-server-accessibility\ndepictio-cli config check-s3-storage\n\n# 2. Validate and sync configuration\ndepictio-cli config validate-project-config --project-config-path ./config.yaml\ndepictio-cli config sync-project-config-to-server --project-config-path ./config.yaml\n\n# 3. Scan and process data\ndepictio-cli data scan --project-config-path ./config.yaml\ndepictio-cli data process --project-config-path ./config.yaml\n</code></pre>"},{"location":"depictio-cli/usage/#development-workflow","title":"\ud83d\udd27 Development Workflow","text":"Testing Changes <pre><code># Preview changes without execution\ndepictio-cli run --project-config-path ./config.yaml --dry-run\n\n# Test with specific workflow\ndepictio-cli run --project-config-path ./config.yaml --workflow-name test-workflow\n</code></pre> Debugging <pre><code># Enable verbose logging\ndepictio-cli run --project-config-path ./config.yaml --verbose --continue-on-error\n\n# Skip problematic steps\ndepictio-cli run --project-config-path ./config.yaml --skip-server-check --skip-s3-check\n</code></pre>"},{"location":"depictio-cli/usage/#backup-operations","title":"\ud83d\udcbe Backup Operations","text":"<p>Admin Access Required</p> <p>All backup operations require administrator privileges.</p> Create Backup <pre><code># Create timestamped backup\ndepictio-cli backup backup --backup-name \"backup-$(date +%Y%m%d-%H%M%S)\"\n\n# Custom backup location\ndepictio-cli backup backup --backup-name production-backup --output-path /secure/backups\n</code></pre> Restore Backup <pre><code># List available backups\ndepictio-cli backup list-backups --backup-path /secure/backups\n\n# Restore specific backup\ndepictio-cli backup restore --backup-path /secure/backups/production-backup --force\n</code></pre>"},{"location":"depictio-cli/usage/#data-management","title":"\ud83d\udcca Data Management","text":"Rescan Data <pre><code># Rescan all folders\ndepictio-cli data scan --project-config-path ./config.yaml --rescan-folders\n\n# Sync file updates\ndepictio-cli data scan --project-config-path ./config.yaml --sync-files\n</code></pre> Process Updates <pre><code># Overwrite existing workflow\ndepictio-cli data process --project-config-path ./config.yaml --overwrite\n\n# Update and reprocess\ndepictio-cli run --project-config-path ./config.yaml --update-config --overwrite\n</code></pre>"},{"location":"depictio-cli/usage/#error-handling","title":"\ud83d\udd27 Error Handling","text":""},{"location":"depictio-cli/usage/#exit-codes","title":"Exit Codes","text":"Code Description Solution <code>0</code> Success Command completed successfully <code>1</code> Configuration error Check configuration file paths and syntax <code>2</code> Server connection failed Verify server URL and network connectivity <code>3</code> S3 storage error Validate S3 credentials and bucket configuration <code>4</code> Data processing failed Check data file permissions and formats"},{"location":"depictio-cli/usage/#common-issues","title":"Common Issues","text":"Connection Problems <p>Error: \"Server not accessible\"</p> <p>Solutions: <pre><code># Check server accessibility\ndepictio-cli config check-server-accessibility\n\n# Verify CLI configuration\ndepictio-cli config show-cli-config\n</code></pre></p> Configuration Errors <p>Error: \"Project config validation failed\"</p> <p>Solutions: <pre><code># Validate configuration with verbose output\ndepictio-cli config validate-project-config --project-config-path ./config.yaml --verbose\n\n# Check configuration examples\n# See: minimal_config.md and full_reference_config.md\n</code></pre></p> Permission Issues <p>Error: \"Admin access required\"</p> <p>Solutions: - Ensure you're logged in with admin credentials - Check CLI configuration includes admin access tokens - Contact system administrator for proper permissions</p>"},{"location":"depictio-cli/usage/#troubleshooting-steps","title":"Troubleshooting Steps","text":"<p>1. Check Prerequisites:</p> <ul> <li>Depictio server is running and accessible</li> <li>CLI configuration file exists (<code>~/.depictio/CLI.yaml</code>)</li> <li>Project configuration file is valid YAML</li> <li>Proper permissions for file access</li> </ul> <p>2. Enable Verbose Logging:</p> <pre><code>depictio-cli [command] --verbose --verbose-level DEBUG\n</code></pre> <p>3. Test Components Individually:</p> <pre><code>depictio-cli config check-server-accessibility\ndepictio-cli config check-s3-storage\ndepictio-cli config validate-project-config --project-config-path ./config.yaml\n</code></pre> <p>4. Use Dry Run Mode:</p> <pre><code>depictio-cli run --project-config-path ./config.yaml --dry-run\n</code></pre>"},{"location":"depictio-cli/usage/#configuration-references","title":"\ud83d\udcd6 Configuration References","text":"<ul> <li>Minimal YAML Configuration</li> <li>Full Reference Configuration</li> </ul>"},{"location":"developer/","title":"Developer","text":""},{"location":"developer/#developer-documentation","title":"Developer Documentation","text":"<p>This section provides information for developers who want to contribute to Depictio. Whether you're interested in fixing bugs, adding new features, or improving documentation, you'll find guidance to help you get started.</p>"},{"location":"developer/#contributing-to-depictio","title":"Contributing to Depictio","text":"<p>Depictio is an open-source project that welcomes contributions from the community. There are many ways to contribute:</p> <ul> <li>Code contributions: Implement new features, develop new components, or fix bugs</li> <li>Testing: Help test features or report bugs</li> <li>Design: Contribute to the UI/UX design*</li> <li>Documentation: Improve or expand the documentation</li> <li>Community support: Help answer questions and support other users</li> </ul> <p>For detailed information on how to contribute, see the Contributing Guide.</p>"},{"location":"developer/#in-this-section","title":"In This Section","text":"<ul> <li>Contributing Guide - Detailed instructions for contributing to Depictio</li> </ul>"},{"location":"developer/#getting-started","title":"Getting Started","text":"<p>To begin contributing to Depictio, we recommend:</p> <ol> <li>Familiarize yourself with the project architecture</li> <li>Read the contributing guidelines</li> <li>Set up your development environment</li> <li>Start with small, manageable contributions</li> </ol> <p>We look forward to your contributions and are here to help you get started!</p>"},{"location":"developer/contributing/","title":"Contributing to Depictio","text":"<p>Thank you for your interest in contributing to Depictio! This guide outlines the process for contributing to the project and provides resources to help you get started.</p>"},{"location":"developer/contributing/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Getting Started</li> <li>Development Environment</li> <li>Project Structure</li> <li>Development Workflow</li> <li>Testing</li> <li>Code Style and Standards</li> <li>Documentation</li> <li>Issue Reporting</li> <li>Pull Requests</li> <li>Code Review Process</li> <li>Community</li> <li>License</li> </ul>"},{"location":"developer/contributing/#getting-started","title":"Getting Started","text":""},{"location":"developer/contributing/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following installed:</p> <ul> <li>Python 3.11 or higher</li> <li>Docker and Docker Compose</li> <li>Git</li> </ul>"},{"location":"developer/contributing/#fork-and-clone","title":"Fork and Clone","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork locally:</li> </ol> <pre><code>git clone https://github.com/YOUR-USERNAME/depictio.git\ncd depictio\n</code></pre> <ol> <li>Add the original repository as an upstream remote:</li> </ol> <pre><code>git remote add upstream https://github.com/depictio/depictio.git\n</code></pre>"},{"location":"developer/contributing/#development-environment","title":"Development Environment","text":""},{"location":"developer/contributing/#setting-up-test-environment","title":"Setting up test environment","text":"<ol> <li>Create a virtual environment using Python's <code>venv</code> module or your preferred tool (e.g., <code>virtualenv</code>, <code>conda</code>, <code>uv</code>):</li> </ol> <p>Example using <code>venv</code>:</p> <pre><code>python -m venv depictio-dev-venv\nsource depictio-dev-venv/bin/activate\n</code></pre> <p>Example using <code>uv</code>:</p> <pre><code>uv venv depictio-dev-venv --python 3.11\n</code></pre> <ol> <li>Install development dependencies:</li> </ol> <pre><code>pip install -e \".[dev]\"\n</code></pre> <ol> <li>Set up pre-commit hooks:</li> </ol> <pre><code>pre-commit install\n</code></pre>"},{"location":"developer/contributing/#running-depictio-locally-using-docker-compose","title":"Running Depictio Locally using Docker Compose","text":"<p>To modify and test Depictio locally, you can use Docker Compose to set up the development environment. This will allow you to run both the backend and frontend services and modify the code as needed from the <code>depictio</code> directory (mounted as a volume in the Docker container).</p> <pre><code>volumes:\n   - ./depictio:/app/depictio\n</code></pre> <ol> <li>To build the Docker images and start the services, run the following command from the root of the project:</li> </ol> <pre><code>docker compose -f docker-compose.dev.yaml \\\n               -f docker-compose/docker-compose.minio.yaml \\\n               --env-file docker-compose/.env up \\\n               --build --detach\n</code></pre> <ol> <li>Access the backend API at <code>http://localhost:8058</code> and the frontend at <code>http://localhost:5080</code>.</li> </ol>"},{"location":"developer/contributing/#dependencies","title":"Dependencies","text":"<p>Currently, Depictio is using a single container for both the backend and frontend services (<code>docker-images/Dockerfile_depictio.dockerfile</code>). This is done to simplify the development process. The container is built using a micromamba environment that includes all necessary dependencies for both the backend and frontend (<code>conda_ens/depictio.yaml</code>). As the project grows, we may consider splitting the backend and frontend into separate containers for better scalability and maintainability. The current container build process also includes a Playwright installation to generate thumbnails to be served on the landing page of the dashboard. As Cypress is currently used for end-to-end testing, we might consider switching to it for thumbnail generation in the future.</p>"},{"location":"developer/contributing/#environment-variables","title":"Environment Variables","text":"<p>Depictio uses environment variables for configuration. You can set these in a <code>.env</code> file in the root directory or pass them directly to Docker Compose. The <code>.env.example</code> file provides a template for the required variables.</p> <p>Important variables during development include:</p> <ul> <li><code>DEV_MODE</code>: Set to <code>true</code> to use development mode from FastAPI and Plotly Dash.</li> <li><code>DEPICTIO_MONGODB_WIPE</code>: Set to <code>true</code> to wipe the MongoDB database on startup (useful for development).</li> <li><code>DEPICTIO_LOGGING_VERBOSITY_LEVEL</code>: Set to <code>DEBUG</code> for detailed logging during development.</li> </ul>"},{"location":"developer/contributing/#project-structure","title":"Project Structure","text":"<p>The Depictio codebase is organized into several key directories:</p> <ul> <li><code>depictio/api/</code> - Backend microservice (FastAPI, port 8058)</li> <li><code>endpoints/</code> - API endpoints for workflows, dashboards, data collections</li> <li><code>models/</code> - Database models and validation</li> <li><code>depictio/dash/</code> - Frontend microservice (Dash, port 5080)</li> <li><code>modules/</code> - Dash Component (see below)</li> <li><code>layouts/</code> - Dashboard layouts and stepper UI</li> <li><code>depictio/models/</code> - Shared Pydantic models</li> <li><code>depictio/cli/</code> - Command-line interface for data management</li> <li><code>helm-charts/</code> - Kubernetes deployment manifests</li> </ul>"},{"location":"developer/contributing/#component-development-key-feature","title":"Component Development (Key Feature)","text":"<p>Depictio uses a modular component system in <code>depictio/dash/modules/</code>:</p> <ul> <li><code>card_component/</code> - Text and summary cards</li> <li><code>figure_component/</code> - Plotly visualizations</li> <li><code>interactive_component/</code> - Sliders, filters, dropdowns</li> <li><code>table_component/</code> - Data tables</li> <li><code>jbrowse_component/</code> - Genomic data visualization</li> </ul> <p>Each component follows this structure:</p> <pre><code>component_name/\n\u251c\u2500\u2500 frontend.py      # Dash callbacks and UI\n\u2514\u2500\u2500 utils.py         # Component building logic\n</code></pre>"},{"location":"developer/contributing/#development-workflow","title":"Development Workflow","text":"<ol> <li>Create a new branch for your feature or bugfix:</li> </ol> <pre><code>git checkout -b &lt;issue-type&gt;/&lt;issue-number&gt;-&lt;short-description&gt;\n# Example: git checkout -b feature/123-add-new-component / bugfix/456-fix-data-processing\n</code></pre> <ol> <li>Make your changes and commit them:</li> </ol> <pre><code>git add .\ngit commit -m \"Description of your changes\"\n</code></pre> <ol> <li>Keep your branch updated with the upstream:</li> </ol> <pre><code>git fetch upstream\ngit rebase upstream/main\n</code></pre> <ol> <li>Push your branch to GitHub:</li> </ol> <pre><code>git push origin &lt;issue-type&gt;/&lt;issue-number&gt;-&lt;short-description&gt;\n</code></pre> <ol> <li>Create a pull request on GitHub.</li> </ol>"},{"location":"developer/contributing/#testing-local-changes","title":"Testing local changes","text":""},{"location":"developer/contributing/#running-tests","title":"Running Tests","text":"<p>Run the test suite to ensure your changes don't break existing functionality:</p> <pre><code>pytest\n</code></pre>"},{"location":"developer/contributing/#writing-tests","title":"Writing Tests","text":"<ul> <li>Place tests in the <code>depictio/tests/</code> directory</li> <li>Follow the existing test structure (e.g., <code>depictio/tests/api/</code>, <code>depictio/tests/dash/</code>, <code>depictio/tests/cli/</code>)</li> </ul>"},{"location":"developer/contributing/#code-style-and-standards","title":"Code Style and Standards","text":"<p>Depictio follows these coding standards:</p> <ul> <li>PEP 8 for Python code style</li> <li>Type hints for all function parameters and return values</li> <li>Docstrings for all modules, classes, and functions</li> </ul> <p>We use pre-commit hooks to enforce code style, which includes:</p> <ul> <li>ruff for code formatting and linting</li> <li>isort for import sorting</li> </ul>"},{"location":"developer/contributing/#documentation","title":"Documentation","text":""},{"location":"developer/contributing/#repository","title":"Repository","text":"<p>The documentation for Depictio is maintained in the <code>depictio-docs</code> repository at the following location: https://github.com/depictio/depictio-docs.</p>"},{"location":"developer/contributing/#pre-requisites","title":"Pre-requisites","text":"<ul> <li>Apply the same procedure as for the main repository to fork the <code>depictio-docs</code> repository, clone it locally, and set up the development environment.</li> <li>Install the</li> </ul>"},{"location":"developer/contributing/#writing-documentation","title":"Writing Documentation","text":"<ul> <li>Documentation is built using MkDocs</li> <li>Source files are in the <code>docs/</code> directory</li> <li>Write in Markdown format</li> <li>Include code examples where appropriate</li> </ul>"},{"location":"developer/contributing/#building-documentation","title":"Building Documentation","text":"<p>To build and preview the documentation locally:</p> <pre><code>cd docs\nmkdocs serve\n</code></pre>"},{"location":"developer/contributing/#issue-reporting","title":"Issue Reporting","text":""},{"location":"developer/contributing/#bug-reports","title":"Bug Reports","text":"<p>When reporting a bug, please include:</p> <ul> <li>A clear, descriptive title</li> <li>Steps to reproduce the issue</li> <li>Expected behavior</li> <li>Actual behavior</li> <li>Screenshots if applicable</li> <li>Environment information</li> </ul>"},{"location":"developer/contributing/#feature-requests","title":"Feature Requests","text":"<p>When requesting a feature, please include:</p> <ul> <li>A clear, descriptive title</li> <li>Detailed description of the proposed feature</li> <li>Rationale for adding the feature</li> <li>Implementation suggestions if applicable</li> </ul>"},{"location":"developer/contributing/#pull-requests","title":"Pull Requests","text":""},{"location":"developer/contributing/#pr-guidelines","title":"PR Guidelines","text":"<ul> <li>Keep PRs focused on a single feature or bugfix</li> <li>Include tests for new functionality</li> <li>Update documentation as needed</li> <li>Reference related issues</li> <li>Follow the commit message format</li> </ul>"},{"location":"developer/contributing/#pr-template","title":"PR Template","text":"<p>Your PR description should include:</p> <ul> <li>What changes were made</li> <li>Why the changes were made</li> <li>How to test the changes</li> <li>Any additional context or notes</li> </ul>"},{"location":"developer/contributing/#code-review-process","title":"Code Review Process","text":"<p>All submissions require review. The review process typically includes:</p> <ol> <li>Automated checks (CI/CD pipeline)</li> <li>Code review by maintainers</li> <li>Addressing feedback</li> <li>Final approval and merge</li> </ol>"},{"location":"developer/contributing/#community","title":"Community","text":""},{"location":"developer/contributing/#communication-channels","title":"Communication Channels","text":"<ul> <li>GitHub Issues for bug reports and feature requests</li> <li>Discussions for general questions and ideas</li> </ul>"},{"location":"developer/contributing/#license","title":"License","text":"<p>By contributing to Depictio, you agree that your contributions will be licensed under the project's license.</p>"},{"location":"developer/developer/","title":"Developer guide","text":"<p>While Depictio is not yet operational, we welcome ideas, suggestions, and feedback from the community. If you have insights or want to contribute to the project, please feel free to open an issue or submit a pull request.</p>"},{"location":"developer/developer/#contribution-guide","title":"Contribution guide","text":""},{"location":"developer/developer/#repositories-organisation","title":"Repositories organisation","text":""},{"location":"developer/developer/#modules-organisation-code-structure","title":"Modules organisation (code structure)","text":""},{"location":"documentation/","title":"Documentation Guide","text":"<p>This section provides an overview of the Depictio documentation structure and guidelines for contributors.</p>"},{"location":"documentation/#overview","title":"Overview","text":"<p>The Depictio documentation aims to be:</p> <ul> <li>Comprehensive: Covering all aspects of the platform</li> <li>Clear: Easy to understand for users of all levels</li> <li>Well-organized: Logically structured for easy navigation</li> <li>Up-to-date: Reflecting the latest version of the software</li> </ul>"},{"location":"documentation/#documentation-structure","title":"Documentation Structure","text":"<p>The documentation is organized into several main sections:</p> <ul> <li>Home: Overview and introduction to Depictio</li> <li>Installation: Setup guides for different environments</li> <li>Usage: Instructions for using the platform</li> <li>Features: Detailed descriptions of capabilities</li> <li>API: Reference for programmatic interaction</li> <li>Developer: Resources for contributors</li> <li>FAQ: Common questions and answers</li> <li>Changelog: Version history and updates</li> </ul>"},{"location":"documentation/#for-contributors","title":"For Contributors","text":"<p>If you're interested in improving the documentation:</p> <ul> <li>Review our content guidelines</li> <li>Follow the project's contribution workflow</li> <li>Use the standard tools: MkDocs with Material theme and Markdown</li> </ul>"},{"location":"documentation/#in-this-section","title":"In This Section","text":"<ul> <li>Documentation Outline - Detailed structure and future plans</li> </ul>"},{"location":"documentation/#building-locally","title":"Building Locally","text":"<p>To preview the documentation on your machine:</p> <pre><code>git clone https://github.com/depictio/depictio-docs.git\npip install -r requirements.txt\nmkdocs serve\n</code></pre> <p>Then visit <code>http://localhost:8000</code> in your browser.</p>"},{"location":"features/","title":"Features","text":""},{"location":"features/#overview","title":"Overview","text":"<p>Depictio is built to address the challenges of visualizing and analyzing large-scale bioinformatics datasets generated by production workflows like nf-core. It provides a user-friendly interface for creating interactive dashboards that can be shared with collaborators, making it easier to explore and interpret complex data.</p> <p>Its key capabilities include:</p> <ul> <li>Interactive Dashboards for real-time data exploration</li> <li>Scalable Architecture for handling large datasets</li> <li>Data Integration from multiple sources</li> <li>User Management for secure access control</li> <li>Customizable Components for tailored visualizations</li> </ul>"},{"location":"features/#in-this-section","title":"In This Section","text":"<ul> <li>Architecture - Detailed overview of Depictio's microservices architecture</li> <li>Modularity - Information about Depictio's modular design and extensibility</li> </ul>"},{"location":"features/#key-components","title":"Key Components","text":"<p>Depictio consists of several integrated components:</p> <ul> <li>Backend API (FastAPI) - Handles data processing and business logic</li> <li>Frontend (Plotly Dash) - Provides the user interface</li> <li>Database (MongoDB) - Stores metadata and configurations</li> <li>Storage (MinIO) - Manages data files and assets</li> </ul> <p>Explore the detailed documentation to learn more about each feature and how they work together to provide a comprehensive visualization platform.</p>"},{"location":"features/architecture/","title":"Architecture","text":"<p>Depictio is built on a modern microservices architecture that provides flexibility, scalability, and maintainability. This page describes the overall architecture and how the different components interact.</p> <p> </p>"},{"location":"features/architecture/#microservices-overview","title":"Microservices Overview","text":"<p>Depictio's architecture consists of four main components:</p> <ol> <li>FastAPI Backend - RESTful API service that handles metadata processing, authentication, and business logic</li> <li>MongoDB Database - Document database for storing metadata, user information, and dashboard configurations</li> <li>MinIO S3 Storage - Object storage for managing data files and assets</li> <li>Plotly Dash Frontend - Interactive web interface for creating and using dashboards</li> </ol>"},{"location":"features/architecture/#fastapi-backend","title":"FastAPI Backend","text":"<p>The backend service is built with FastAPI, a modern, high-performance web framework for building APIs with Python. Key features include:</p> <ul> <li>RESTful API endpoints for all platform functionality</li> <li>JWT-based authentication and authorization</li> <li>Asynchronous request handling for improved performance</li> <li>Pydantic models for data validation and serialization</li> <li>Beanie ODM for MongoDB integration</li> </ul>"},{"location":"features/architecture/#mongodb-database","title":"MongoDB Database","text":"<p>MongoDB serves as the primary database for Depictio, storing:</p> <ul> <li>User accounts and authentication information</li> <li>Project metadata and configurations</li> <li>Workflow definitions and run information</li> <li>Dashboard layouts, structure and content</li> <li>Data collection metadata</li> </ul>"},{"location":"features/architecture/#minio-s3-storage-optional","title":"MinIO S3 Storage (Optional)","text":"<p>MinIO provides S3-compatible object storage for:</p> <ul> <li>Processed data ready for visualization (Delta lake, genome-browser compatible data, etc.)</li> </ul>"},{"location":"features/architecture/#plotly-dash-frontend","title":"Plotly Dash Frontend","text":"<p>The frontend is built with Plotly Dash (React), a framework for building analytical web applications. Features include:</p> <ul> <li>Interactive data visualization components</li> <li>Real-time data updates</li> <li>Draggagle and customizable dashboard layouts</li> <li>Integration with the backend API for data retrieval and processing</li> </ul>"},{"location":"features/architecture/#security","title":"Security","text":"<p>Depictio implements several security measures:</p> <ul> <li>JWT-based authentication for API access</li> <li>Role-based access control for resources (owner, editor, viewer)</li> <li>Secure communication between services</li> <li>Data encryption for sensitive information (e.g., passwords)</li> </ul>"},{"location":"features/frontend_components/","title":"Frontend components","text":""},{"location":"features/frontend_components/#generic-components-data-collection-table","title":"Generic components (Data collection Table)","text":"<p>There are currently 4 main components supported to build your dashboard:</p> <ul> <li>Figures: Bar, Line, Scatter, Box and Histogram plots.</li> <li>Metrics cards: Cards displaying metrics values.</li> <li>Interactive components: (slider, dropdown, input text, etc.)</li> <li>Tables: Interactive tables with sorting, filtering and searching functionalities.</li> </ul>"},{"location":"features/frontend_components/#specific-components","title":"Specific components","text":"<ul> <li>JBrowse: Genome browser to visualize genomic data.</li> <li>Graphs: Network graphs to visualize interactions between entities.</li> <li>Geomap: Geographical map.</li> </ul>"},{"location":"features/frontend_components/#ui-to-metadata-mapping","title":"UI to metadata mapping","text":"<ul> <li>Explain how the frontend components are mapped to metadata, metadata then turned into polars filters.</li> </ul>"},{"location":"features/frontend_components/#dynamic-joining-of-data-collections","title":"Dynamic joining of data collections","text":"<ul> <li>Explain how data collections can be joined dynamically between different component types.</li> </ul>"},{"location":"features/modularity/","title":"Modularity","text":"<p>Depictio code structure is designed with a modular architecture, allowing for easy integration of new features and functionalities. The frontend and backend components are decoupled, enabling independent development and deployment of each module. The platform is built to be scalable and adaptable to various needs, with a focus on user-friendly interfaces and interactive data visualization tools.</p>"},{"location":"features/modularity/#general-object-model-and-database-design","title":"General object model and database design","text":"<p>Depictio object model was designed to reflect production-oriented workflows. The architecture is built to ensure a clear separation of concerns, with distinct layers for workflows, workflow run configurations, runs, files generated, and data collections. This modular approach is reflected in both the database schema and the API structure.</p>"},{"location":"features/modularity/#project-workflow-object-design","title":"Project &amp; Workflow Object Design","text":"<ul> <li>Project : The top-level entity that encapsulates that represents one or multiple production-oriented pipeline/workflow.</li> <li>Workflow: Standardised / production-oriented workflow</li> <li>Run Configurations: These define the parameters and settings that were used to run a workflow.</li> <li>Runs: Instances of a production workflow executed using a specific run configuration. Each run generates output files, that are structured the same way across runs. These files can then be associated into data collections.</li> <li>Files: Artifacts produced by each run. These can be intermediate or final results of the workflow.</li> <li>Data Collections: Aggregated data from files following the same structure.</li> </ul> <p>The following diagram illustrates a \"Workflow\" object and its relationships with other objects in the system. The workflow object is at the center, with run configurations, runs, files, and data collections branching out from it. The files generated by each run can be organized into data collections, which can be used for visualization and analysis. Multiple workflows can be associated with a single project, enabling users to manage and visualize data, e.g., multi-omics data, from different workflows (nf-core/rnaseq and nf-core/atacseq) in a single dashboard.</p> <p></p>"},{"location":"features/modularity/#code-architecture","title":"Code architecture","text":"<p>The code organisation clearly separates each of the frontend components and the API endpoints, making it easy to understand and extend the platform.</p> <p></p>"},{"location":"features/modularity/#api-structure","title":"API structure","text":"<p>The API is structured to mirror the object design specified above, with each major component of the workflow having its own set of endpoints and models. The organization within <code>depictio/api/v1/endpoints</code> is as follows:</p> <ul> <li>dashboards_endpoints: Manages endpoints related to dashboards.</li> <li>datacollections_endpoints: Handles endpoints for data collections, mapping closely to the Data Collection objects in the design.</li> <li>deltatables_endpoints: Provides endpoints for delta tables, which are specific types of data collections with versioning.</li> <li>files_endpoints: Manages file-related endpoints, directly corresponding to the File objects.</li> <li>user_endpoints: Manages user authentication and authorization, including models and routes for user management.</li> <li>utils_endpoints: Provides utility endpoints, typically for internal or auxiliary operations.</li> <li>workflow_endpoints: Focuses on managing workflows, run configurations, and runs, reflecting the core of the workflow architecture.</li> <li>project_endpoints: Handles project-related endpoints, including project creation, management, and permissions.</li> </ul> <p>Each endpoint is defined in a separate subfolder, where the <code>routes.py</code> file contains the API routes and the <code>models.py</code> file contains the object models associated.</p> <p></p>"},{"location":"features/modularity/#dashboard-components","title":"Dashboard components","text":"<p>The frontend components in Depictio are organized in the depictio/dash/modules folder, with each component defined in a separate subfolder. This modular design ensures easy integration and maintainability.</p>"},{"location":"features/modularity/#component-structure","title":"Component Structure","text":"<p>Each component folder typically contains:</p> <ul> <li>frontend.py: Implements Dash callback functions.</li> <li>utils.py: Contains helper functions for rendering and state management.</li> </ul> <p>Each of the frontend components is designed to be modular and can be easily integrated into the dashboard. Each component is defined in a separate folder, containing the component logic and styling. The <code>frontend.py</code> file contains the dash callback functions implementation and the <code>utils.py</code> file contains the helpers functions used by the component, allowing the component to be re-rendered in different scenarios (first design, reload/restore, refresh after data update).</p> <p></p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#depictio-server","title":"Depictio (server)","text":"Docker Compose <p>For development, testing, and small-scale deployments.</p> Guide Kubernetes <p>For production environments and scalable deployments.</p> Guide"},{"location":"installation/#depictio-cli","title":"Depictio-CLI","text":"Depictio-CLI <p>For data ingestion and management.</p> Guide"},{"location":"installation/#configuration","title":"Configuration","text":"Environment Variables <p>Configure authentication, backups, and advanced features.</p> Guide"},{"location":"installation/cli/","title":"CLI Installation","text":"<p>This guide will walk you through installing and configuring the Depictio CLI tool, which is used for data ingestion and management.</p>"},{"location":"installation/cli/#overview","title":"Overview","text":"<p>The Depictio CLI is a command-line tool that allows you to:</p> <ul> <li>Scan and process data files</li> <li>Upload data to the Depictio platform</li> <li>Manage projects and workflows</li> <li>Configure data collections</li> </ul>"},{"location":"installation/cli/#prerequisites","title":"Prerequisites","text":"<p>Before installing the CLI, ensure you have:</p> <ul> <li>Python 3.11 or higher</li> <li>pip (Python package manager)</li> <li>Access to a running Depictio instance</li> </ul>"},{"location":"installation/cli/#installation-methods","title":"Installation Methods","text":""},{"location":"installation/cli/#install-via-pip","title":"Install via pip","text":"<p>You can install the Depictio CLI using plain pip or through your preferrend package manager like <code>uv</code>:</p> <pre><code>pip install depictio-cli\n</code></pre> <p>If you prefer using <code>uv</code>, you can install it like this:</p> <pre><code>uv venv depictio-cli-env --python 3.11\nsource depictio-cli-env/bin/activate\npip install depictio-cli\n</code></pre>"},{"location":"installation/cli/#install-from-source","title":"Install from Source","text":"<p>You can also install the CLI directly from the source code:</p> <pre><code>git clone https://github.com/depictio/depictio.git\ncd depictio/cli\npython -m venv depictio-cli-env\nsource depictio-cli-env/bin/activate\npip install -e .\n</code></pre> <p>This will install the CLI in development mode, allowing you to modify the code if needed.</p>"},{"location":"installation/cli/#verifying-the-installation","title":"Verifying the Installation","text":"<p>After installation, verify that the CLI is working correctly:</p> <pre><code>depictio-cli --help\n</code></pre> <p>This should display the help message with available commands and options.</p>"},{"location":"installation/cli/#configuration","title":"Configuration","text":"<p>Before using the CLI, you need to configure it to connect to your Depictio instance.</p> <p>You need to have access to the Depictio web interface in order to generate a configuration file:</p> <ol> <li>Log in to the Depictio web interface</li> <li>Navigate to your user profile</li> <li>Click on \"Generate CLI Config\"</li> <li>Copy the generated YAML configuration into your clipboard using the \"Copy to clipboard\" icon button</li> <li>Place the configuration file in the following location:</li> <li><code>~/.depictio/CLI.yaml</code> (recommended, default location)</li> </ol>"},{"location":"installation/cli/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/cli/#common-issues","title":"Common Issues","text":""},{"location":"installation/cli/#connection-errors","title":"Connection Errors","text":"<p>If you see connection errors:</p> <ol> <li>Verify that your Depictio instance is running</li> <li>Check that the API URL in your configuration is correct</li> <li>Ensure your token is valid and has not expired</li> </ol>"},{"location":"installation/cli/#authentication-issues","title":"Authentication Issues","text":"<p>If you see authentication errors:</p> <ol> <li>Check that your token is correct</li> <li>Verify that your user account has the necessary permissions</li> <li>Generate a new token if needed</li> </ol>"},{"location":"installation/cli/#s3-storage-issues","title":"S3 Storage Issues","text":"<p>If you have issues with S3 storage:</p> <ol> <li>Verify that MinIO is running</li> <li>Check that your S3 credentials are correct</li> <li>Ensure the bucket exists and is accessible</li> </ol>"},{"location":"installation/cli/#next-steps","title":"Next Steps","text":"<p>Now that you have installed and configured the CLI, you can:</p> <ul> <li>Learn how to use the CLI</li> <li>Understand the YAML configuration</li> <li>Get started with Depictio</li> </ul>"},{"location":"installation/configuration/","title":"Environment Variables Configuration","text":"<p>Depictio uses environment variables to configure various aspects of the application. This guide covers the key environment variables you can set to customize your deployment.</p>"},{"location":"installation/configuration/#base-configuration","title":"Base Configuration","text":"<p>The base configuration is available in the .env.example file in the repository. Copy this file to <code>.env</code> and modify the values as needed.</p>"},{"location":"installation/configuration/#basic-setup","title":"Basic Setup","text":"<pre><code># Application Context\nDEPICTIO_CONTEXT=server\nDEPICTIO_LOGGING_VERBOSITY_LEVEL=ERROR\n\n# MinIO Storage Configuration\nDEPICTIO_MINIO_ROOT_USER=minio\nDEPICTIO_MINIO_ROOT_PASSWORD=minio123\nDEPICTIO_MINIO_PUBLIC_URL=http://localhost:9000\n\n# MongoDB Configuration  \nDEPICTIO_MONGODB_DB_NAME=depictioDB\nDEPICTIO_MONGODB_PORT=27018\nDEPICTIO_MONGODB_SERVICE_NAME=mongo\nDEPICTIO_MONGODB_WIPE=false\n\n# FastAPI Server Configuration\nDEPICTIO_FASTAPI_HOST=0.0.0.0\nDEPICTIO_FASTAPI_PORT=8058\nDEPICTIO_FASTAPI_SERVICE_NAME=depictio-backend\nDEPICTIO_FASTAPI_PUBLIC_URL=http://localhost:8058\n\n# Dash Frontend Configuration\nDEPICTIO_DASH_HOST=0.0.0.0\nDEPICTIO_DASH_PORT=5080\nDEPICTIO_DASH_SERVICE_NAME=depictio-frontend\n</code></pre>"},{"location":"installation/configuration/#authentication-configuration","title":"Authentication Configuration","text":""},{"location":"installation/configuration/#unauthenticated-mode","title":"Unauthenticated Mode","text":"<p>Enable unauthenticated mode to allow anonymous access to your Depictio instance:</p> <pre><code># Enable unauthenticated mode (allows anonymous access)\nDEPICTIO_AUTH_UNAUTHENTICATED_MODE=true\n\n# Anonymous user configuration\nDEPICTIO_AUTH_ANONYMOUS_USER_EMAIL=anonymous@depict.io\nDEPICTIO_AUTH_TEMPORARY_USER_EXPIRY_HOURS=24\n</code></pre>"},{"location":"installation/configuration/#google-oauth-integration","title":"Google OAuth Integration","text":"<p>Configure Google OAuth for user authentication:</p> <pre><code># Enable Google OAuth authentication\nDEPICTIO_AUTH_GOOGLE_OAUTH_ENABLED=true\n\n# Google OAuth credentials (obtain from Google Cloud Console)\nDEPICTIO_AUTH_GOOGLE_OAUTH_CLIENT_ID=your-google-client-id.apps.googleusercontent.com\nDEPICTIO_AUTH_GOOGLE_OAUTH_CLIENT_SECRET=your-google-client-secret\n\n# OAuth redirect URI (adjust to your domain)\nDEPICTIO_AUTH_GOOGLE_OAUTH_REDIRECT_URI=http://localhost:8058/auth/google/callback\n</code></pre>"},{"location":"installation/configuration/#setting-up-google-oauth","title":"Setting up Google OAuth","text":"<ol> <li>Create a Google Cloud Project:</li> <li>Go to Google Cloud Console</li> <li> <p>Create a new project or select an existing one</p> </li> <li> <p>Enable Google+ API:</p> </li> <li>Navigate to \"APIs &amp; Services\" \u2192 \"Library\"</li> <li> <p>Search for \"Google+ API\" and enable it</p> </li> <li> <p>Create OAuth 2.0 Credentials:</p> </li> <li>Go to \"APIs &amp; Services\" \u2192 \"Credentials\"</li> <li>Click \"Create Credentials\" \u2192 \"OAuth 2.0 Client ID\"</li> <li>Configure the consent screen if prompted</li> <li>Set application type to \"Web application\"</li> <li> <p>Add authorized redirect URIs:</p> <ul> <li><code>http://localhost:8058/auth/google/callback</code> (for local development)</li> <li><code>https://your-domain.com/auth/google/callback</code> (for production)</li> </ul> </li> <li> <p>Copy the credentials to your environment variables</p> </li> </ol>"},{"location":"installation/configuration/#authentication-keys","title":"Authentication Keys","text":"<p>Configure JWT authentication keys:</p> <pre><code># Authentication key configuration\nDEPICTIO_AUTH_KEYS_DIR=depictio/keys\nDEPICTIO_AUTH_KEYS_ALGORITHM=RS256\nDEPICTIO_AUTH_CLI_CONFIG_DIR=depictio/.depictio\nDEPICTIO_AUTH_INTERNAL_API_KEY=your-internal-api-key\n</code></pre>"},{"location":"installation/configuration/#custom-internal-api-key","title":"Custom Internal API Key","text":"<p>If you want to use your own internal API key instead of the auto-generated one:</p> <pre><code># Set your custom internal API key\nDEPICTIO_AUTH_INTERNAL_API_KEY=your-custom-internal-api-key-here\n</code></pre> <p>Generating a secure API key:</p> <pre><code># Generate a secure random API key (Linux/macOS)\nopenssl rand -hex 32\n\n# Or use Python\npython -c \"import secrets; print(secrets.token_hex(32))\"\n</code></pre>"},{"location":"installation/configuration/#custom-publicprivate-key-pairs","title":"Custom Public/Private Key Pairs","text":"<p>By default, Depictio generates RS256 key pairs automatically. To use your own custom keys:</p>"},{"location":"installation/configuration/#1-generate-your-own-key-pair","title":"1. Generate Your Own Key Pair","text":"<pre><code># Generate private key\nopenssl genrsa -out private_key.pem 2048\n\n# Generate public key from private key\nopenssl rsa -in private_key.pem -pubout -out public_key.pem\n</code></pre>"},{"location":"installation/configuration/#2-configure-key-directory","title":"2. Configure Key Directory","text":"<pre><code># Set custom keys directory\nDEPICTIO_AUTH_KEYS_DIR=/path/to/your/custom/keys\n\n# Ensure the directory contains:\n# - private_key.pem\n# - public_key.pem\n</code></pre>"},{"location":"installation/configuration/#3-file-structure","title":"3. File Structure","text":"<p>Your custom keys directory should contain:</p> <pre><code>/path/to/your/custom/keys/\n\u251c\u2500\u2500 private_key.pem    # Your private key\n\u2514\u2500\u2500 public_key.pem     # Your public key\n</code></pre>"},{"location":"installation/configuration/#4-security-considerations-for-custom-keys","title":"4. Security Considerations for Custom Keys","text":"<ul> <li>Secure Storage: Store keys in a secure location with proper file permissions</li> <li>Key Rotation: Regularly rotate your keys for security</li> <li>Backup: Securely backup your keys</li> <li>Access Control: Limit access to key files</li> </ul> <pre><code># Set proper permissions for key files\nchmod 600 /path/to/your/custom/keys/private_key.pem\nchmod 644 /path/to/your/custom/keys/public_key.pem\n</code></pre>"},{"location":"installation/configuration/#5-dockerkubernetes-deployment-with-custom-keys","title":"5. Docker/Kubernetes Deployment with Custom Keys","text":"<p>Docker Compose:</p> <pre><code>version: '3.8'\nservices:\n  depictio-backend:\n    image: depictio/depictio:latest\n    volumes:\n      - /path/to/your/custom/keys:/app/depictio/keys:ro\n    environment:\n      - DEPICTIO_AUTH_KEYS_DIR=/app/depictio/keys\n</code></pre> <p>Kubernetes Secret:</p> <pre><code># Create secret from your key files\nkubectl create secret generic depictio-keys \\\n  --from-file=private_key.pem=/path/to/your/custom/keys/private_key.pem \\\n  --from-file=public_key.pem=/path/to/your/custom/keys/public_key.pem\n\n# Mount secret in your deployment\napiVersion: v1\nkind: Deployment\nspec:\n  template:\n    spec:\n      containers:\n      - name: depictio-backend\n        volumeMounts:\n        - name: depictio-keys\n          mountPath: /app/depictio/keys\n          readOnly: true\n        env:\n        - name: DEPICTIO_AUTH_KEYS_DIR\n          value: /app/depictio/keys\n      volumes:\n      - name: depictio-keys\n        secret:\n          secretName: depictio-keys\n</code></pre>"},{"location":"installation/configuration/#backup-and-restore-configuration","title":"Backup and Restore Configuration","text":"<p>Configure backup and restore functionality:</p> <pre><code># Backup Configuration\nDEPICTIO_BACKUP_BASE_DIR=/path/to/backup/base\nDEPICTIO_BACKUP_BACKUP_DIR=backups\nDEPICTIO_BACKUP_S3_BACKUP_STRATEGY=s3_to_s3\nDEPICTIO_BACKUP_S3_LOCAL_BACKUP_DIR=backups/s3_data_backups\nDEPICTIO_BACKUP_COMPRESS_LOCAL_BACKUPS=true\nDEPICTIO_BACKUP_BACKUP_FILE_RETENTION_DAYS=30\n</code></pre>"},{"location":"installation/configuration/#backup-to-separate-s3-bucket","title":"Backup to Separate S3 Bucket","text":"<p>For production deployments, it's recommended to backup to a separate S3 bucket:</p> <pre><code># Enable backup to separate S3 bucket\nDEPICTIO_BACKUP_BACKUP_S3_ENABLED=true\nDEPICTIO_BACKUP_BACKUP_S3_BUCKET=depictio-backups\nDEPICTIO_BACKUP_BACKUP_S3_ENDPOINT_URL=https://s3.amazonaws.com\nDEPICTIO_BACKUP_BACKUP_S3_ACCESS_KEY=your-backup-s3-access-key\nDEPICTIO_BACKUP_BACKUP_S3_SECRET_KEY=your-backup-s3-secret-key\nDEPICTIO_BACKUP_BACKUP_S3_REGION=us-east-1\n</code></pre>"},{"location":"installation/configuration/#backup-strategies","title":"Backup Strategies","text":"<p>Choose from different backup strategies:</p> <ul> <li><code>s3_to_s3</code>: Direct S3 to S3 backup (recommended for production)</li> <li><code>local</code>: Local file system backup</li> <li><code>both</code>: Both local and S3 backup</li> </ul>"},{"location":"installation/configuration/#performance-configuration","title":"Performance Configuration","text":"<p>Configure timeouts and performance settings:</p> <pre><code># HTTP and API Timeouts\nDEPICTIO_PERFORMANCE_HTTP_CLIENT_TIMEOUT=30\nDEPICTIO_PERFORMANCE_API_REQUEST_TIMEOUT=60\n\n# Browser/Screenshot Timeouts\nDEPICTIO_PERFORMANCE_BROWSER_NAVIGATION_TIMEOUT=60000\nDEPICTIO_PERFORMANCE_BROWSER_PAGE_LOAD_TIMEOUT=90000\nDEPICTIO_PERFORMANCE_SCREENSHOT_CAPTURE_TIMEOUT=90000\n\n# Service Readiness Configuration\nDEPICTIO_PERFORMANCE_SERVICE_READINESS_RETRIES=5\nDEPICTIO_PERFORMANCE_SERVICE_READINESS_DELAY=3\nDEPICTIO_PERFORMANCE_SERVICE_READINESS_TIMEOUT=10\n</code></pre>"},{"location":"installation/configuration/#development-settings","title":"Development Settings","text":"<p>Configuration for development and testing:</p> <pre><code># Development Mode\nDEV_MODE=true\nDEPICTIO_PLAYWRIGHT_DEV_MODE=true\nDEPICTIO_TEST_MODE=true\n\n# Version Information\nDEPICTIO_VERSION=latest\n</code></pre>"},{"location":"installation/configuration/#dockerkubernetes-configuration","title":"Docker/Kubernetes Configuration","text":"<p>For containerized deployments:</p> <pre><code># Container Configuration\nUID=502\nGID=20\n\n# Kubernetes-specific (if deploying to Kubernetes)\nKUBERNETES_NAMESPACE=depictio\nKUBERNETES_NODE_NAME=node-1\n</code></pre>"},{"location":"installation/configuration/#complete-example","title":"Complete Example","text":"<p>Here's a complete example configuration for a production deployment with all features enabled:</p> <pre><code># ============================================================================\n# DEPICTIO PRODUCTION CONFIGURATION\n# ============================================================================\n\n# Application Context\nDEPICTIO_CONTEXT=server\nDEPICTIO_LOGGING_VERBOSITY_LEVEL=INFO\nDEPICTIO_VERSION=latest\n\n# MinIO Storage Configuration\nDEPICTIO_MINIO_ROOT_USER=minio\nDEPICTIO_MINIO_ROOT_PASSWORD=secure-minio-password\nDEPICTIO_MINIO_PUBLIC_URL=https://minio.yourdomain.com\n\n# MongoDB Configuration\nDEPICTIO_MONGODB_DB_NAME=depictioDB\nDEPICTIO_MONGODB_PORT=27017\nDEPICTIO_MONGODB_SERVICE_NAME=mongo\nDEPICTIO_MONGODB_WIPE=false\n\n# FastAPI Server Configuration\nDEPICTIO_FASTAPI_HOST=0.0.0.0\nDEPICTIO_FASTAPI_PORT=8058\nDEPICTIO_FASTAPI_SERVICE_NAME=depictio-backend\nDEPICTIO_FASTAPI_PUBLIC_URL=https://api.yourdomain.com\n\n# Dash Frontend Configuration\nDEPICTIO_DASH_HOST=0.0.0.0\nDEPICTIO_DASH_PORT=5080\nDEPICTIO_DASH_SERVICE_NAME=depictio-frontend\n\n# Authentication Configuration\nDEPICTIO_AUTH_UNAUTHENTICATED_MODE=false\nDEPICTIO_AUTH_KEYS_DIR=depictio/keys\nDEPICTIO_AUTH_KEYS_ALGORITHM=RS256\n\n# Google OAuth Configuration\nDEPICTIO_AUTH_GOOGLE_OAUTH_ENABLED=true\nDEPICTIO_AUTH_GOOGLE_OAUTH_CLIENT_ID=your-client-id.apps.googleusercontent.com\nDEPICTIO_AUTH_GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret\nDEPICTIO_AUTH_GOOGLE_OAUTH_REDIRECT_URI=https://yourdomain.com/auth/google/callback\n\n# Backup Configuration\nDEPICTIO_BACKUP_BASE_DIR=/var/backups/depictio\nDEPICTIO_BACKUP_BACKUP_DIR=backups\nDEPICTIO_BACKUP_S3_BACKUP_STRATEGY=s3_to_s3\nDEPICTIO_BACKUP_BACKUP_S3_ENABLED=true\nDEPICTIO_BACKUP_BACKUP_S3_BUCKET=depictio-backups\nDEPICTIO_BACKUP_BACKUP_S3_ENDPOINT_URL=https://s3.amazonaws.com\nDEPICTIO_BACKUP_BACKUP_S3_ACCESS_KEY=your-backup-access-key\nDEPICTIO_BACKUP_BACKUP_S3_SECRET_KEY=your-backup-secret-key\nDEPICTIO_BACKUP_BACKUP_S3_REGION=us-east-1\nDEPICTIO_BACKUP_COMPRESS_LOCAL_BACKUPS=true\nDEPICTIO_BACKUP_BACKUP_FILE_RETENTION_DAYS=30\n\n# Performance Configuration\nDEPICTIO_PERFORMANCE_HTTP_CLIENT_TIMEOUT=30\nDEPICTIO_PERFORMANCE_API_REQUEST_TIMEOUT=60\nDEPICTIO_PERFORMANCE_BROWSER_NAVIGATION_TIMEOUT=60000\n\n# JBrowse Integration\nDEPICTIO_JBROWSE_ENABLED=true\n\n# Development Settings (set to false for production)\nDEV_MODE=false\nDEPICTIO_PLAYWRIGHT_DEV_MODE=false\nDEPICTIO_TEST_MODE=false\n</code></pre>"},{"location":"installation/configuration/#security-considerations","title":"Security Considerations","text":"<ul> <li>Never commit sensitive credentials to version control</li> <li>Use strong passwords for MinIO and other services</li> <li>Enable HTTPS in production environments</li> <li>Regularly rotate API keys and OAuth credentials</li> <li>Set appropriate backup retention policies</li> <li>Use separate S3 buckets for primary data and backups</li> <li>Enable authentication in production (disable unauthenticated mode)</li> </ul>"},{"location":"installation/configuration/#environment-variable-validation","title":"Environment Variable Validation","text":"<p>Depictio validates environment variables on startup. Check the logs for any configuration errors:</p> <pre><code># Check application logs for configuration validation\ndocker-compose logs depictio-backend\ndocker-compose logs depictio-frontend\n</code></pre> <p>For more detailed configuration options, refer to the source code settings models.</p>"},{"location":"installation/docker/","title":"Docker Compose Installation","text":"<p>This guide will walk you through installing and running Depictio using Docker Compose, which is the simplest way to get started with Depictio.</p>"},{"location":"installation/docker/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following installed:</p> <ul> <li>Docker (version 20.10.0 or higher)</li> <li>Docker Compose (version 2.0.0 or higher)</li> <li>Git (optional, for cloning the repository)</li> </ul>"},{"location":"installation/docker/#installation-steps","title":"Installation Steps","text":""},{"location":"installation/docker/#1-clone-the-repository-optional","title":"1. Clone the Repository (Optional)","text":"<p>If you want to use the latest development version, you can clone the repository:</p> <pre><code>git clone https://github.com/depictio/depictio.git\ncd depictio\n</code></pre> <p>Alternatively, you can download a release version from the GitHub releases page.</p>"},{"location":"installation/docker/#2-configure-environment-variables","title":"2. Configure Environment Variables","text":"<p>Create a <code>.env</code> file in the root directory of the project. You can use the provided example as a starting point:</p> <pre><code>cp .env.example .env\n</code></pre> <p>Edit the <code>.env</code> file to customize your configuration if needed. The default values should work for most users.</p>"},{"location":"installation/docker/#3-start-the-services","title":"3. Start the Services","text":"<p>Start all Depictio services using Docker Compose:</p> <pre><code>docker-compose -f docker-compose.yaml -f docker-compose/docker-compose.minio.yaml up -d\n</code></pre> <p>This command will:</p> <ul> <li>Pull the necessary Docker images (latest by default, can be changed in the <code>.env</code> file)</li> <li>Create and start containers for MongoDB, the Depictio backend &amp; frontend, and MinIO</li> <li>Set up the required network connections between services</li> </ul> <p>Note</p> <p>If you wish to use your own MinIO instance, you can skip the <code>docker-compose/docker-compose.minio.yaml</code> file. In this case, make sure to set the <code>MINIO_</code> variables accordingly in your <code>.env</code> file to point to your MinIO instance.</p>"},{"location":"installation/docker/#4-verify-the-installation","title":"4. Verify the Installation","text":"<p>After starting the services, you can verify that everything is running correctly:</p> <pre><code>docker-compose ps\n</code></pre> <p>You should see all services in the \"Up\" state.</p>"},{"location":"installation/docker/#accessing-depictio","title":"Accessing Depictio","text":"<p>Once the services are running, you can access:</p> <ul> <li>Frontend (Dash): http://localhost:5080</li> <li>Backend API: http://localhost:8058</li> <li>API Documentation: http://localhost:8058/docs</li> <li>Minio UI: http://localhost:9001</li> </ul> <p>Default credentials are:</p> <ul> <li>Depictio Admin credentials: login: <code>admin@example.com</code> / password: <code>changeme</code></li> <li>MinIO credentials: login: <code>minio</code> / password: <code>minio123</code></li> </ul>"},{"location":"installation/docker/#managing-the-services","title":"Managing the Services","text":""},{"location":"installation/docker/#stopping-the-services","title":"Stopping the Services","text":"<p>To stop all services while preserving data:</p> <pre><code>docker-compose stop\n</code></pre>"},{"location":"installation/docker/#stopping-and-removing-containers","title":"Stopping and Removing Containers","text":"<p>To stop all services and remove the containers:</p> <pre><code>docker-compose down\n</code></pre>"},{"location":"installation/docker/#stopping-and-removing-everything","title":"Stopping and Removing Everything","text":"<p>To stop all services, remove the containers, and delete all data:</p> <pre><code>docker-compose down -v\n</code></pre> <p>Warning: This will delete all data stored in MongoDB and MinIO.</p>"},{"location":"installation/docker/#viewing-logs","title":"Viewing Logs","text":"<p>To view the logs from all services:</p> <pre><code>docker-compose logs\n</code></pre> <p>To view logs from a specific service:</p> <pre><code>docker-compose logs depictio-backend\n</code></pre> <p>To follow the logs in real-time:</p> <pre><code>docker-compose logs -f\n</code></pre>"},{"location":"installation/docker/#configuration-options","title":"Configuration Options","text":""},{"location":"installation/docker/#ports","title":"Ports","text":"<p>By default, Depictio uses the following ports:</p> <ul> <li>5080: Frontend (Dash)</li> <li>8058: Backend API</li> <li>27018: MongoDB</li> <li>9000: MinIO API</li> <li>9001: MinIO UI</li> </ul> <p>If you need to change these ports, edit the <code>.env</code> file.</p>"},{"location":"installation/docker/#development-mode","title":"Development Mode","text":"<p>To run Depictio using Flask/Dash/gunicorn and FastAPI/uvicorn debug mode, which enables additional debugging features:</p> <pre><code>DEV_MODE=true docker-compose up -d\n</code></pre>"},{"location":"installation/docker/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/docker/#container-fails-to-start","title":"Container Fails to Start","text":"<p>If a container fails to start, check the logs:</p> <pre><code>docker-compose logs &lt;service_name&gt;\n</code></pre> <p>Common issues include:</p> <ul> <li>Port conflicts (another application is using the same port)</li> <li>Insufficient permissions for mounted volumes</li> <li>MongoDB connection issues</li> </ul>"},{"location":"installation/docker/#cannot-connect-to-services","title":"Cannot Connect to Services","text":"<p>If you cannot connect to the services, check:</p> <ol> <li>That the containers are running: <code>docker-compose ps</code></li> <li>That you're using the correct ports</li> <li>That there are no firewall rules blocking the connections</li> </ol>"},{"location":"installation/docker/#data-persistence-issues","title":"Data Persistence Issues","text":"<p>By default, MongoDB data is stored in the <code>./depictioDB</code> directory. Make sure this directory has the correct permissions.</p>"},{"location":"installation/docker/#next-steps","title":"Next Steps","text":"<p>Now that you have Depictio running, you can:</p> <ul> <li>Get started with using Depictio</li> <li>Learn how to create dashboards</li> <li>Configure the CLI for data ingestion</li> </ul>"},{"location":"installation/install/","title":"Install","text":""},{"location":"installation/install/#system-requirements","title":"System Requirements","text":"<p>Before installing Depictio, ensure your system meets the following requirements:</p>"},{"location":"installation/install/#minimum-requirements","title":"Minimum Requirements","text":"<ul> <li>CPU: 2 cores</li> <li>RAM: 4GB</li> <li>Disk Space: 10GB (plus additional space for your data)</li> <li>Operating System: Linux, macOS, or Windows with Docker support</li> </ul>"},{"location":"installation/kubernetes/","title":"Kubernetes Installation","text":"<p>This guide will walk you through deploying Depictio on a Kubernetes cluster using Helm charts.</p>"},{"location":"installation/kubernetes/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have:</p> <ul> <li>Kubernetes 1.19+</li> <li>Helm 3.2.0+</li> <li>PV provisioner support in the underlying infrastructure (if persistence is enabled)</li> </ul>"},{"location":"installation/kubernetes/#installation-steps","title":"Installation Steps","text":""},{"location":"installation/kubernetes/#step-1-clone-the-repository","title":"Step 1: Clone the Repository","text":"<pre><code>git clone https://github.com/depictio/depictio.git\ncd depictio\n</code></pre>"},{"location":"installation/kubernetes/#step-2-install-the-chart","title":"Step 2: Install the Chart","text":"<p>To install the chart with the release name <code>depictio</code>:</p> <pre><code>helm install depictio ./helm-charts/depictio\n</code></pre> <p>This command deploys Depictio on the Kubernetes cluster with the default configuration.</p>"},{"location":"installation/kubernetes/#step-3-verify-the-installation","title":"Step 3: Verify the Installation","text":"<p>Check that all pods are running:</p> <pre><code>kubectl get pods -n datasci-depictio-project\n</code></pre> <p>You should see pods for the backend, frontend, MongoDB, and MinIO.</p>"},{"location":"installation/kubernetes/#accessing-depictio","title":"Accessing Depictio","text":"<p>After deploying the chart, you can access the Depictio application:</p> <ul> <li>If using ClusterIP (default), use port-forwarding to access the frontend service:</li> </ul> <pre><code>kubectl port-forward -n datasci-depictio-project service/depictio-frontend 5080:80\n</code></pre> <p>Then visit http://localhost:5080 in your browser.</p>"},{"location":"installation/kubernetes/#customizing-the-installation","title":"Customizing the Installation","text":"<p>You can customize the chart by overriding its values in a separate YAML file:</p> <pre><code>helm install depictio ./helm-charts/depictio -f my-values.yaml\n</code></pre> <p>For a complete list of configurable parameters, refer to the <code>values.yaml</code> file or run:</p> <pre><code>helm show values ./helm-charts/depictio\n</code></pre>"},{"location":"installation/kubernetes/#uninstalling","title":"Uninstalling","text":"<p>To uninstall/delete the <code>depictio</code> deployment:</p> <pre><code>helm uninstall depictio\n</code></pre>"},{"location":"installation/kubernetes/#key-configuration-parameters","title":"Key Configuration Parameters","text":"<p>Here are some of the key parameters you can configure:</p>"},{"location":"installation/kubernetes/#storage","title":"Storage","text":"<p>The chart supports persistence for various components:</p> <ul> <li>MongoDB data</li> <li>MinIO storage</li> <li>Screenshots</li> <li>Example data</li> </ul> <p>By default, all persistence is enabled with appropriate storage sizes.</p>"},{"location":"installation/kubernetes/#services","title":"Services","text":"<ul> <li>Backend API: Accessible on port 8058</li> <li>Frontend: Accessible on port 5080</li> <li>MongoDB: Accessible on port 27018</li> <li>MinIO: Accessible on ports 9000 (API) and 9001 (Console)</li> </ul> <p>For more detailed configuration options, please refer to the Helm chart README.</p>"},{"location":"more/","title":"Additional Resources","text":"<p>This section provides supplementary information and resources related to the Depictio project.</p>"},{"location":"more/#in-this-section","title":"In This Section","text":"<ul> <li>Funding - Information about how the Depictio project is funded</li> <li>Color Palette - Official color palette and design guidelines</li> </ul>"},{"location":"more/#community","title":"Community","text":"<p>Depictio is an open-source project with an active community. Connect with us through:</p> <ul> <li>GitHub: github.com/depictio/depictio</li> <li>Community Forums: community.depictio.org</li> <li>Twitter: @depictio</li> </ul>"},{"location":"more/#license","title":"License","text":"<p>Depictio is open-source software released under the MIT License.</p>"},{"location":"more/#acknowledgements","title":"Acknowledgements","text":"<p>We thank all contributors and the following projects that make Depictio possible:</p> <ul> <li>FastAPI</li> <li>Plotly Dash</li> <li>MongoDB</li> <li>MinIO</li> <li>Docker</li> <li>Kubernetes</li> </ul>"},{"location":"more/#contact","title":"Contact","text":"<ul> <li>General Inquiries: info@depictio.org</li> <li>Technical Support: GitHub Issues</li> </ul>"},{"location":"more/funding/","title":"Funding","text":""},{"location":"more/funding/#funding","title":"Funding","text":"Marie Sk\u0142odowska-Curie Grant <p>This project has received funding from the European Union's Horizon 2020 research and innovation programme under the Marie Sk\u0142odowska-Curie grant agreement No 945405</p> Learn More ARISE Programme <p>ARISE is a postdoctoral research programme for technology developers, hosted at EMBL.</p> Learn More EMBL <p>The European Molecular Biology Laboratory is Europe's flagship laboratory for the life sciences.</p> Learn More"},{"location":"more/funding/#academic-partners","title":"Academic Partners","text":"SciLifeLab Data Centre <p>SciLifeLab Data Centre provides data-driven life science research infrastructure and expertise to accelerate open science in Sweden and beyond.</p> Learn More"},{"location":"more/palette/","title":"Color Palette","text":"<p>This page demonstrates the Depictio brand colors and how to use them in your applications.</p>"},{"location":"more/palette/#brand-colors","title":"Brand Colors","text":"<p>The Depictio brand uses a consistent color palette to maintain visual identity across all platforms and applications.</p>"},{"location":"more/palette/#using-the-colors-in-your-code","title":"Using the Colors in Your Code","text":""},{"location":"more/palette/#python","title":"Python","text":"<pre><code># Colors definition for Python applications\ncolors = {\n    \"purple\": \"#9966CC\",\n    \"violet\": \"#7A5DC7\",\n    \"blue\": \"#6495ED\",\n    \"teal\": \"#45B8AC\",\n    \"green\": \"#8BC34A\",\n    \"yellow\": \"#F9CB40\",\n    \"orange\": \"#F68B33\",\n    \"pink\": \"#E6779F\",\n    \"red\": \"#E53935\",\n    \"black\": \"#000000\",\n}\n\n# Color combinations\ncolor_sequences = {\n    \"main\": [colors[\"purple\"], colors[\"blue\"], colors[\"teal\"], colors[\"green\"],\n            colors[\"yellow\"], colors[\"orange\"], colors[\"pink\"]],\n    \"cool\": [colors[\"purple\"], colors[\"violet\"], colors[\"blue\"], colors[\"teal\"]],\n    \"warm\": [colors[\"yellow\"], colors[\"orange\"], colors[\"red\"], colors[\"pink\"]],\n    \"alert\": [colors[\"green\"], colors[\"yellow\"], colors[\"orange\"], colors[\"red\"]],\n}\n\n# Example usage in Dash\nimport dash_mantine_components as dmc\n\nbutton = dmc.Button(\n    \"Primary Action\",\n    styles={\n        \"root\": {\n            \"backgroundColor\": colors[\"blue\"],\n            \"&amp;:hover\": {\"backgroundColor\": colors[\"blue\"] + \"cc\"},\n        }\n    },\n)\n</code></pre>"},{"location":"more/palette/#css","title":"CSS","text":"<pre><code>:root {\n  --depictio-purple: #9966cc;\n  --depictio-violet: #7a5dc7;\n  --depictio-blue: #6495ed;\n  --depictio-teal: #45b8ac;\n  --depictio-green: #8bc34a;\n  --depictio-yellow: #f9cb40;\n  --depictio-orange: #f68b33;\n  --depictio-pink: #e6779f;\n  --depictio-red: #e53935;\n  --depictio-black: #000000;\n}\n\n.btn-primary {\n  background-color: var(--depictio-blue);\n  color: white;\n}\n\n.btn-danger {\n  background-color: var(--depictio-red);\n  color: white;\n}\n\n.btn-success {\n  background-color: var(--depictio-green);\n  color: white;\n}\n</code></pre>"},{"location":"more/stories/","title":"Stories","text":"<p>This section is under construction and will be updated soon.</p>"},{"location":"roadmap/","title":"Roadmap","text":""},{"location":"roadmap/#what-we-have-now","title":"What we have now","text":""},{"location":"roadmap/#data-ingestion-data-types-supported","title":"Data ingestion &amp; data types supported","text":"<ul> <li> Data ingestion using Depictio-CLI (python package based typer) using YAML configuration file</li> <li> Polars-compatible data format (Parquet, CSV, JSON, TSV) ingestion and transformation into Delta Lake format</li> <li> Delta lake push to S3 bucket (on-premise or remote MinIO)</li> <li> Comprehensive S3 backup and restore strategy with CLI commands and API endpoints</li> <li> Performance optimization with caching for iterative joins and component data</li> <li> Enhanced CLI execution with run commands and improved logging</li> </ul>"},{"location":"roadmap/#authentication","title":"Authentication","text":"<ul> <li> Basic authentication (username/password) &gt; register, login, logout</li> <li> JWT token management</li> <li> Refresh token support with enhanced security and session persistence</li> <li> Public/private &amp; API internal key creation</li> <li> Profile management (change password)</li> <li> Create CLI configuration through the web interface (YAML to be copy-pasted)</li> <li> Google OAuth authentication integration</li> <li> Unauthenticated mode with automatic anonymous login for public access</li> <li> Temporary user functionality with session management and upgrade options</li> </ul>"},{"location":"roadmap/#dashboards-management","title":"Dashboards management","text":"<ul> <li> Create a dashboard for a project</li> <li> Edit name, duplicate, delete a dashboard</li> <li> Make public/private a dashboard at the instance level</li> </ul>"},{"location":"roadmap/#dashboard-design-and-interactivity","title":"Dashboard design and interactivity","text":"<ul> <li> Dashboard design using generic components (figure, metrics card, interactive component, table)</li> <li> Add/delete components</li> <li> Resize and relayout components</li> <li> Edit components (title, aggregation applied)</li> <li> Duplicate components</li> <li> Enable/disable interactivity</li> <li> Enable/disable edit mode</li> <li> Auto-save dashboard + manual save (trigger screenshot to be used as thumbnail)</li> </ul>"},{"location":"roadmap/#project-management","title":"Project management","text":"<ul> <li> Project management UI to list workflows and data collections</li> <li> List and edit project permissions</li> <li> Turn public/private a project</li> </ul>"},{"location":"roadmap/#admin","title":"Admin","text":"<ul> <li> Admin interface to list and manage users (delete functionality only)</li> <li> Admin interface to list projects</li> <li> Admin interface to list dashboards</li> </ul>"},{"location":"roadmap/#testing-quality-assurance","title":"Testing &amp; Quality Assurance","text":"<ul> <li> Pre-commit hooks for code quality enforcement</li> <li> Comprehensive end-to-end testing with Cypress</li> <li> Enhanced CI/CD workflows with automated testing</li> <li> Integration tests for various components and workflows</li> <li> Flask security assessment scanner integration</li> <li> Improved test reliability and coverage</li> </ul>"},{"location":"roadmap/#infrastructure-deployment","title":"Infrastructure &amp; Deployment","text":"<ul> <li> Docker containerization with multi-architecture support (AMD64/ARM64)</li> <li> Kubernetes deployment with Helm charts</li> <li> Enhanced Helm chart configuration with persistent volumes and ingress</li> <li> Gitpod workspace setup for streamlined development</li> <li> Automated release workflows with changelog generation</li> <li> Implement astral/ty as static type checking &amp; in pre-commit hooks</li> <li> Allow users to provide their own set of public/private keys</li> </ul>"},{"location":"roadmap/#ui","title":"UI","text":"<ul> <li> Functional dark/light mode theming with auto-theme detection</li> <li> Upgrade dash to the latest version (v3+)</li> <li> Upgrade dash mantine components to the latest version (2.0+) with enhanced components and styling</li> </ul>"},{"location":"roadmap/#what-we-plan-for-the-future","title":"What we plan for the future","text":""},{"location":"roadmap/#data-ingestion-data-types-supported_1","title":"Data ingestion &amp; data types supported","text":"<ul> <li> Support MultiQC report integration (leverage MultiQC 1.29 with parquet file)</li> <li> Support for genome-browser tracks through JBrowse2 (e.g., VCF, BAM, BED, GFF)</li> <li> Data ingestion template for heavily-used and standardized nf-core community workflows (<code>depictio-cli scan --template nf-core/sarek .</code>)</li> <li> Single file loading (HTTP polars) without using CLI</li> <li> S3 bucket automatic cleanup when delta not listed in DB</li> </ul>"},{"location":"roadmap/#authentication_1","title":"Authentication","text":"<ul> <li> OAuth2 authentication (GitHub, etc.) - Google OAuth already implemented</li> <li> SSO/SAML authentication - partial SAML integration completed</li> <li> Groups management</li> </ul>"},{"location":"roadmap/#dashboards-management_1","title":"Dashboards management","text":"<ul> <li> Dashboard sharing with specific users or groups</li> <li> Tagging system for dashboards</li> </ul>"},{"location":"roadmap/#dashboard-design-and-interactivity_1","title":"Dashboard design and interactivity","text":"<ul> <li> Implement JBrowse2 component for genome browser tracks</li> <li> High-dimensional data methods (e.g., UMAP, PCA, t-SNE)</li> <li> Omics data visualization methods (e.g., Volcano plot, ...)</li> <li> Markdown component</li> <li> Extend interactive component (date, radio, ...)</li> <li> Improve component (e.g., slider values range, figure styling and properties, etc.)</li> <li> Add more grouping functionalities</li> </ul>"},{"location":"roadmap/#admin_1","title":"Admin","text":"<ul> <li> Move admin interface to a dedicated FastAPI dashboard using FastAPI-Users and FastAPI-Admin</li> <li> List and manage groups</li> <li> Admin interface to list and manage API keys</li> <li> Update endpoints policy (hide/unprotect when needed)</li> </ul>"},{"location":"roadmap/#development-infrastructure","title":"Development &amp; Infrastructure","text":"<ul> <li> Build separate containers for frontend and backend</li> <li> Performance testing for polars read/write from S3 with/without dashboard rendering</li> </ul>"},{"location":"roadmap/#templates-workflows","title":"Templates &amp; Workflows","text":"<ul> <li> Depictio templates system for workflow integration</li> <li> Dashboard templates for standardized nf-core workflows</li> <li> Template validation and CI/CD integration</li> <li> Template marketplace with screenshots and descriptions</li> </ul>"},{"location":"roadmap/#ui_1","title":"UI","text":"<ul> <li> Improve UI/UX (e.g., loading spinner, error handling, etc.)</li> <li> Further theme customization (colors, fonts) and CSS styling enhancements</li> </ul>"},{"location":"usage/","title":"Usage","text":"<p>This section provides guidance on how to effectively use Depictio to create and manage interactive dashboards for visualizing bioinformatics data.</p>"},{"location":"usage/#getting-started","title":"Getting Started","text":"<p>After installing Depictio, you can begin by:</p> <ul> <li>Accessing the web interface</li> <li>Setting up your first project</li> <li>Creating your first dashboard</li> <li>Ingesting data using the CLI tool</li> </ul> <p>For a step-by-step introduction, see the Getting Started Guide.</p>"},{"location":"usage/#key-workflows","title":"Key Workflows","text":"<p>Depictio supports several key workflows:</p> <ol> <li>Data Ingestion - Import your data into Depictio using the CLI tool</li> <li>Project Management - Organize your data into projects</li> <li>Dashboard Creation - Design interactive dashboards to visualize your data</li> <li>Data Exploration - Interact with your data through filters and selections</li> <li>Sharing - Share your dashboards with collaborators</li> </ol>"},{"location":"usage/#available-guides","title":"Available Guides","text":"<p>Explore our detailed guides to learn more about specific aspects of Depictio:</p> <ul> <li>Web UI Guide - Navigate and use the Depictio web interface</li> <li>Dashboard Creation Guide - Create and configure dashboards</li> <li>Dashboard Usage Guide - Interact with and explore dashboards</li> </ul>"},{"location":"usage/#cli-tool","title":"CLI Tool","text":"<p>The Depictio CLI tool is essential for data ingestion and management. Learn how to use it effectively:</p> <ul> <li>CLI Usage Guide - Basic and advanced CLI commands</li> <li>YAML Configuration Reference - Configure the CLI tool</li> </ul>"},{"location":"usage/#administration","title":"Administration","text":"<p>For system administrators, we provide guidance on managing Depictio:</p> <ul> <li>Administration Guide - User management, system configuration, and maintenance</li> </ul>"},{"location":"usage/administration/","title":"Admin UI","text":"<p>This section is under construction and will be updated soon.</p>"},{"location":"usage/get_started/","title":"Getting Started with Depictio","text":"<p>This guide will help you get started with Depictio after installation. It covers the basic concepts and workflows to help you begin visualizing your data.</p>"},{"location":"usage/get_started/#first-steps","title":"First Steps","text":""},{"location":"usage/get_started/#installation","title":"Installation","text":"<p>If you haven't installed Depictio yet, please refer to the installation guide for detailed instructions on how to set up Depictio using Docker Compose, or Helm.</p>"},{"location":"usage/get_started/#accessing-the-web-interface","title":"Accessing the Web Interface","text":"<p>After installation see the installation guide, you can access the Depictio web interface. If you used Docker Compose or the helm chart with a local setup, the default port is <code>5080</code>. Open your web browser and navigate to:</p> <pre><code>http://localhost:5080\n</code></pre>"},{"location":"usage/get_started/#logging-in","title":"Logging In","text":"<p>When you first access Depictio, you'll be prompted to log in. The default installation creates an admin user with:</p> <ul> <li>Email: <code>admin@example.com</code></li> <li>Password: <code>changeme</code></li> </ul> <p>Important</p> <p>Change the default password after your first login for security reasons.</p>"},{"location":"usage/get_started/#use-depictio-cli","title":"Use depictio-cli","text":""},{"location":"usage/get_started/#install-the-cli-tool","title":"Install the CLI tool","text":"<p>Depictio provides a command-line interface (CLI) tool for managing data ingestion and other tasks. You can install the CLI tool by following the instructions in the depictio-cli documentation.</p>"},{"location":"usage/get_started/#create-a-cli-configuration","title":"Create a CLI configuration","text":"<p>Once you have installed the CLI tool, you need to create a configuration file to interact with Depictio. This configuration file contains the necessary information to connect to your Depictio instance, including the base URL and user credentials. To do so, go to the profile section in the web interface (bottom left corner).</p> <p>Once in the profile section, click in the CLI Agents button.</p> <p>You will land on the CLI Agents page, where you can manage your CLI configurations. To create a new configuration, click on the Add new configuration button.</p> <p>Select a name for your configuration and click on the Save button.</p> <p>This will generate a YAML file with the necessary configuration to interact with Depictio via the CLI. Save this file in a secure location (e.g., <code>~/.depictio/CLI.yaml</code>), and ensure it is not publicly accessible. Depending of your installation, the file will look like this:</p> <pre><code># ~/.depictio/CLI.yaml\nbase_url: http://localhost:8058\ns3:\n  bucket: depictio-bucket\n  external_host: localhost\n  external_port: 9000\n  external_protocol: http\n  external_service: false\n  public_url: null\n  root_password: minio123\n  root_user: minio\n  service_name: minio\n  service_port: 9000\nuser:\n  description: null\n  email: admin@example.com\n  flexible_metadata: null\n  hash: null\n  id: 6845c5892bf43fee63e14bab\n  is_admin: true\n  token:\n    access_token: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...\n    created_at: '2025-06-08 19:34:21'\n    description: null\n    expire_datetime: '2026-06-08 19:34:21'\n    flexible_metadata: null\n    hash: null\n    id: 6845e5bdce243952fac3e444\n    logged_in: false\n    name: TEST2\n    token_lifetime: long-lived\n    token_type: bearer\n    user_id: 6845c5892bf43fee63e14bab\n</code></pre>"},{"location":"usage/get_started/#use-the-cli-tool","title":"Use the CLI tool","text":"<p>You can now use the CLI tool to interact with your Depictio instance. For example, you can list available workflows, upload data collections, and manage your projects. Refer to the depictio-cli documentation for detailed usage instructions.</p> <p>In that get started guide, you can use the palmer penguins dataset to test the CLI tool. This dataset mimics the palmer penguins dataset, which is a popular dataset for testing data visualization tools.</p> <pre><code>depictio-cli run \\\n    --CLI-config-path ~/.depictio/CLI.yaml \\\n    --project-config-path ../api/v1/configs/penguins_dataset/penguins_project.yaml\n</code></pre> <p>This command will run the CLI tool with the specified configuration file and project configuration file. This will create a new project in Depictio with the palmer penguins dataset, including 2 data collections: <code>physical_features</code> and <code>demographic_data</code>.</p> <p>Once the data ingested into the system, you can go to the web interface and see the project created in the Project Management section.</p>"},{"location":"usage/get_started/#creating-your-first-dashboard","title":"Creating Your First Dashboard","text":"<p>To create your first dashboard using the palmer penguins dataset, click on + New Dashboard in the top right corner of the web interface.</p> <p>This will open the dashboard creation wizard. Select the Palmer Penguins Species Comparison project from the dropdown menu, and then click on Create Dashboard.</p> <p>You will see a new dashboard created using the Palmer Penguins Species Comparison project.</p> <p>Then follow the dashboard creation guide and dashboard usage guide. These guides will walk you through the process of designing a dashboard, adding components, and configuring interactivity.</p>"},{"location":"usage/get_started/#next-steps","title":"Next Steps","text":"<p>Now that you understand the basics, you can:</p> <ul> <li>Learn more about dashboard creation</li> <li>Explore the dashboard components</li> <li>Set up the CLI for your own data</li> <li>Understand the API for integration</li> </ul>"},{"location":"usage/get_started/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues:</p> <ul> <li>Check the FAQ for common problems and solutions</li> <li>Review the logs for error messages</li> <li>Ensure your data is in a supported format</li> <li>Verify that all services are running correctly</li> </ul>"},{"location":"usage/guides/dashboard_creation/","title":"Dashboard Creation","text":""},{"location":"usage/guides/dashboard_creation/#add-a-component-to-the-dashboard","title":"Add a component to the dashboard","text":""},{"location":"usage/guides/dashboard_creation/#step-1-component-selection","title":"Step 1: Component Selection","text":"<ol> <li>Begin by clicking on the \"+ New Dashboard\" button to create a new dashboard.</li> <li>In the \"Design your new dashboard component\" modal:</li> <li>Choose from the available standard or special components (e.g., Figure, Card, Interactive, Table, or special components like JBrowse, Graph, Map).</li> <li>For this example, select Figure for the scatter plot and Histogram for the histogram, and Interactive for interactive components.</li> <li>Once you\u2019ve chosen the component, click Next Step.</li> </ol>"},{"location":"usage/guides/dashboard_creation/#step-2-data-selection","title":"Step 2: Data Selection","text":"<ol> <li>For each selected component, choose the corresponding workflow and data collection from the dropdowns.</li> <li>Verify the Data Collection Info, such as Workflow ID, Table type, MongoDB ID, and Data preview.</li> <li>Click Next Step to proceed.</li> </ol>"},{"location":"usage/guides/dashboard_creation/#step-3-customize-your-component","title":"Step 3: Customize Your Component","text":"<ol> <li> <p>Choose Visualization or Interactive Type:</p> </li> <li> <p>Based on the component type selected in Step 1, choose the appropriate visualization or interactive type from the list of available options (e.g., Bar, Scatter, Histogram, RangeSlider).</p> </li> <li> <p>Set Data Parameters:</p> </li> <li> <p>Define key parameters such as X-axis and Y-axis (if applicable), and assign the relevant data columns from your dataset.</p> </li> <li> <p>Configure additional data settings, such as filters or ranges, depending on the component's functionality.</p> </li> <li> <p>Adjust Specific Parameters:</p> </li> <li> <p>Customize visualization-specific parameters like colors, bin sizes, or axis labels to refine how the data is presented.</p> </li> <li> <p>For interactive components, configure sliders, filters, or dropdown options based on the desired user interactions.</p> </li> <li> <p>Finalize Customization:</p> </li> <li>Review the component preview and ensure all settings are accurate.</li> <li>Once complete, click Next Step to proceed to the final stage.</li> </ol> <p>Other examples:</p>"},{"location":"usage/guides/dashboard_usage/","title":"Using the Dashboard","text":""},{"location":"usage/guides/dashboard_usage/#right-sidebar-parameters","title":"Right Sidebar Parameters","text":"<p>The right sidebar allows you to customize the appearance and behavior of the dashboard. Currently it includes the following options:</p>"},{"location":"usage/guides/dashboard_usage/#switches","title":"Switches","text":"<ul> <li>Edit Dashboard layout: allow you to enable or disable the layout editing mode, which allows you to modify the size and position of the components. Interactions with the components are still enabled in this mode.</li> <li>Display components options: show or hide the options of the components at the top of each component. When hidden, the options will not be displayed. See the Component-wise options section for more details.</li> <li>Toggle interactivity: enable or disable the interactivity of the components. When disabled, the components will not respond to user interactions.</li> </ul>"},{"location":"usage/guides/dashboard_usage/#buttons","title":"Buttons","text":"<ul> <li>Remove all components: remove all components from the dashboard.</li> <li>Reset all filters: reset all filters applied to the components.</li> </ul>"},{"location":"usage/guides/dashboard_usage/#component-wise-options","title":"Component-wise options","text":"<p>When the Display components options switch is enabled, each component will display a set of options at the top of the component. These options allow you to perform the following actions:</p> <ul> <li> Delete: Remove the component from the dashboard.</li> <li> Edit: Open a modal to modify the component settings.</li> <li> Clone: Create a copy of the component.</li> <li> Reset filters: Clear all filters applied to the component.</li> </ul>"},{"location":"usage/guides/dashboard_usage/#interactivity","title":"Interactivity","text":""},{"location":"usage/guides/dashboard_usage/#interactive-actions","title":"Interactive Actions","text":"<p>There are currently two types of interactive actions available in the dashboard:</p> <ul> <li>Through the interactive components (e.g., RangeSlider, MultiSelect, TextInput, etc.).</li> <li>Through the graph components (only Scatter plots are handled yet).</li> <li>Click mode: When you click on a point in the scatter plot, the other components will be updated according to the data point clicked.</li> <li>Selection mode: When you select a region in the scatter plot (using the \"Box select\" option), the other components will be updated according to the data points in the selected region.</li> </ul>"},{"location":"usage/guides/dashboard_usage/#reset-filters","title":"Reset Filters","text":"<ul> <li>Reset all filters You can reset all filters applied to the components by clicking the Reset all filters button in the right sidebar. This will clear all filters applied to the components and reset them to their default state.</li> <li>Reset graph filters You can reset the filters applied to the graph components by clicking the orange  Reset button in the component options at the top of the box. This will clear the filters applied to the graph component and reset it to its default state.</li> </ul>"},{"location":"usage/guides/dashboard_usage/#saving-the-dashboard","title":"Saving the Dashboard","text":"<ol> <li>Once your dashboard is ready, click the Save icon (green button at the top right).</li> <li>A modal will appear confirming that your dashboard has been saved (e.g., \"Your amazing dashboard was successfully saved!\").</li> <li>Click Close to dismiss the modal.</li> <li>Your dashboard will now appear with a thumbnail under the Recently Viewed section on the landing page.</li> </ol>"},{"location":"usage/guides/dashboard_usage/#example-dashboard-result","title":"Example Dashboard result","text":""},{"location":"usage/guides/web_ui/","title":"Web UI","text":""},{"location":"usage/guides/web_ui/#introduction","title":"Introduction","text":""},{"location":"usage/guides/web_ui/#register-and-login","title":"Register and login","text":""},{"location":"usage/guides/web_ui/#registering-an-account-sign-up","title":"Registering an Account (Sign Up)","text":"<ol> <li>Navigate to the Registration page by clicking the Register button on the login screen.</li> </ol> <ol> <li> <p>Enter your email address in the \"Email\" field.</p> </li> <li> <p>Create a password and enter it in the \"Password\" field. You can click the eye icon to view the password as you type and Confirm your password by re-entering it in the \"Confirm Password\" field.</p> </li> <li> <p>Click the Register button to submit your registration details.</p> </li> <li> <p>After successful registration, you can return to the login page by clicking the Back to Login button.</p> </li> </ol> <p></p>"},{"location":"usage/guides/web_ui/#logging-in-sign-in","title":"Logging In (Sign In)","text":"<ol> <li>Open the Depictio Login page.</li> <li>Enter your email address in the \"Email\" field.</li> <li>Enter your password in the \"Password\" field.</li> <li>If you want to see the password as you type it, click the eye icon next to the password field.</li> <li>Once both fields are filled in, click the Login button.</li> <li>You will be redirected to the Depictio landing page (currently <code>/dashboards</code>).</li> </ol>"},{"location":"usage/guides/web_ui/#landing-page-dashboards-section-dashboards","title":"Landing page / Dashboards section (/dashboards)","text":""},{"location":"usage/guides/web_ui/#creating-a-new-dashboard","title":"Creating a New Dashboard","text":"<ol> <li>On the landing page, click the orange \"+ New Dashboard\" button located in the top right corner.</li> <li>A pop-up window will appear with a field labeled \"Dashboard Title\".</li> <li>Enter a name for your new dashboard.</li> <li>Your dashboard will be created with the title you provided and added to the section.</li> <li>Click the blue \"Create Dashboard\" button to create the dashboard.</li> <li>The new dashboard will appear in the section with informations including name, owner and status (public/private).</li> </ol>"},{"location":"usage/guides/web_ui/#functionalities","title":"Functionalities","text":""},{"location":"usage/guides/web_ui/#viewing-a-dashboard","title":"Viewing a Dashboard","text":"<ol> <li>Once a dashboard is created, it will appear under the section.</li> <li>Click the \"View\" button next to the dashboard name to open and explore its content.</li> </ol>"},{"location":"usage/guides/web_ui/#deleting-a-dashboard","title":"Deleting a Dashboard","text":"<ol> <li>To delete a dashboard, locate the dashboard in the section.</li> <li>Click the red \"Delete\" button next to the dashboard name.</li> <li>A confirmation pop-up will appear, asking \"Are you sure you want to delete this dashboard?\".</li> <li>Click \"Delete\" to permanently remove the dashboard, or \"Cancel\" to keep it.</li> </ol>"},{"location":"usage/guides/web_ui/#editing-dashboard-name","title":"Editing dashboard name","text":"<ol> <li>To edit the name of a dashboard, locate the dashboard in the section.</li> <li>Click the \"Edit name\" button next to the dashboard name.</li> <li>A pop-up window will appear with a field labeled \"New name\".</li> <li>Enter a new name for your dashboard.</li> <li>Click the blue \"Save\" button to save the new name.</li> </ol>"},{"location":"usage/guides/web_ui/#duplicating-a-dashboard","title":"Duplicating a dashboard","text":"<ol> <li>To duplicate a dashboard, locate the dashboard in the section.</li> <li>Click the \"Duplicate\" button next to the dashboard name.</li> <li>The dashboard will be duplicated and added to the section with the suffix \"(copy)\".</li> </ol> <p>Note</p> <p>  Both \"public\" and \"private\" dashboards are listed in the Dashboards section. Public dashboards are accessible to all users, while private dashboards are only visible to the user who created them. Only the user who created a private dashboard can edit, or delete it.</p>"},{"location":"usage/guides/web_ui/#projects-section-projects","title":"Projects section (/projects)","text":"<ul> <li>The left sidebar includes a \"Projects\" section where users can manage their projects. Click on \"Projects\" to navigate and view them.</li> </ul> <p>You will have access recursively to the workflows related to the project and the data collections related to each of the workflows. Each entity will allow you to access the details of the entity, to see the related configuration used, as well as previsualize the data (for data collections of type <code>table</code>).</p>"},{"location":"usage/guides/web_ui/#user-information-profile","title":"User Information (/profile)","text":"<ul> <li>At the bottom of the left sidebar, you will find:</li> <li>Server status: Displays the current server version and online status.</li> <li>User information: Displays your username and email (e.g., <code>test_user@example.com</code>).</li> </ul>"},{"location":"usage/guides/web_ui/#about-section-about","title":"About section (/about)","text":"<p>The About section provides information about the GitHub repository and the documentation.</p>"},{"location":"usage/guides/web_ui/#admin-section-admin","title":"Admin section (/admin)","text":"<p>The Admin section is only accessible to users with admin privileges. It allows admins to view users, projects and dashboards. The Users tab displays a list of all users registered in the system, while the Dashboards tab displays a list of all dashboards. The Projects tab is currently under development.</p>"}]}